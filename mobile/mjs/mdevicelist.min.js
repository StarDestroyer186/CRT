var alarmtimer;
function getSpeedState(t, e, a, i, o, n, r) {
  var s = window.parent,
    l = {
      tip: "",
      sta: 0,
      spd: a + " " + s.UNIT_SPEED + " (" + s.JS_STATIC + ")",
      val: a,
    };
  if (1 == t) {
    if (((l.sta = 1), 1 == e))
      if (a >= 120)
        (l.tip = a + "" + s.UNIT_SPEED),
          (l.sta = 6),
          (l.spd = a + s.UNIT_SPEED + " (" + s.JS_OVER_SPEED + ")");
      else if (a >= 90)
        (l.tip = a + "" + s.UNIT_SPEED),
          (l.sta = 5),
          (l.spd = a + s.UNIT_SPEED + " (" + s.JS_HIGH_SPEED + ")");
      else if (a >= 80)
        (l.tip = a + " " + s.UNIT_SPEED),
          (l.sta = 4),
          (l.spd = a + s.UNIT_SPEED + " (" + s.JS_HIGH_SPEED + ")");
      else if (a > 40)
        (l.tip = a + " " + s.UNIT_SPEED),
          (l.sta = 3),
          (l.spd = a + s.UNIT_SPEED + " (" + s.JS_MOVING + ")");
      else if (a > 0)
        (l.tip = a + " " + s.UNIT_SPEED),
          (l.sta = 2),
          (l.spd = a + s.UNIT_SPEED + " (" + s.JS_MOVING + ")");
      else {
        var d = null != typeof r && null != r && r.indexOf("3005") >= 0;
        (l.sta = d ? 30 : 1),
          (l.tip = "0 " + s.UNIT_SPEED),
          (l.spd = a + s.UNIT_SPEED + " (" + s.JS_STATIC + ")");
      }
    o > 0 && (l.sta = 7),
      "black" == n
        ? (l.sta = 8)
        : "blue" == n
        ? (l.sta = 9)
        : "green" == n
        ? (l.sta = 10)
        : "gray" == n
        ? (l.sta = 11)
        : "orange" == n
        ? (l.sta = 12)
        : "purple" == n
        ? (l.sta = 13)
        : "red" == n
        ? (l.sta = 14)
        : "yellow" == n && (l.sta = 15);
  } else if (
    ((l.spd = a + " " + s.UNIT_SPEED), null == i || "undefined" == i || "" == i)
  )
    l.tip = s.JS_TIMEOUT_INVALID;
  else {
    var p = newDate(i).getTime() + 60 * new Date().getTimezoneOffset() * 1e3,
      c = (new Date().getTime() - p) / 1e3;
    l.tip =
      -1 == a
        ? s.JS_EXPIRED
        : c <= 0
        ? a + " " + s.UNIT_SPEED
        : c > 0 && c < 60
        ? "<1" + s.JS_TIMEOUT_MINS
        : c >= 60 && c < 3600
        ? ">" + parseInt(c / 60) + s.JS_TIMEOUT_MINS
        : c >= 3600 && c < 86400
        ? ">" + parseInt(c / 3600) + s.JS_TIMEOUT_HOUR
        : c >= 86400 && c < 604800
        ? ">" + parseInt(c / 86400) + s.JS_TIMEOUT_DAY
        : c >= 604800 && c < 2592e3
        ? ">" + parseInt(c / 604800) + s.JS_TIMEOUT_WEEK
        : c >= 2592e3 && c < 31536e3
        ? ">" + parseInt(c / 2592e3) + s.JS_TIMEOUT_MON
        : ">" + parseInt(c / 31536e3) + s.JS_TIMEOUT_YEAR;
  }
  return l;
}
function getSpeedColor(t) {
  return t >= 120
    ? "#FF002A"
    : t >= 90
    ? "#9A009C"
    : t >= 80
    ? "#3200FF"
    : t > 40
    ? "#0096FE"
    : "#5DFEFE";
}
function getFlagById(t) {
  return window.parent.JS_DEVICE_FLAG4ID[t];
}
function getIdByFlag(t) {
  return window.parent.JS_DEVICE_ID4FLAG[t];
}
function updateFlag(t, e) {
  window.parent.JS_DEVICE_FLAG4ID[t] = e;
}
function getStatusById(t) {
  return window.parent.JS_DEVICE_STATUS[t];
}
function setStatusById(t, e) {
  window.parent.JS_DEVICE_STATUS[t] = e;
}
function getTypeById(t) {
  return window.parent.JS_DEVICE_TYPE4ID[t];
}
//returns all online devices
function getDeviceList() {
  var t = [],
    e = window.parent.JS_DEVICE_FLAG4ID;
  for (var a in e) t.push(e[a]);
  return t;
}
var Groups = [],
  GroupItem = [],
  ChangeItems = new Array(),
  $lastselect;
function addGroupItem(
  t,
  e,
  a,
  i,
  o,
  n,
  r,
  s,
  l,
  d,
  p,
  c,
  h,
  u,
  m,
  _,
  f,
  g,
  v,
  y,
  x,
  T,
  S,
  b,
  I,
  E,
  w
) {
  (zt = h),
    (h =
      null == h || 0 == h.length
        ? h
        : $.format.date(h, JS_DEFAULT_DATETIME_fmt_JS)),
    (u =
      null == u || 0 == u.length
        ? u
        : $.format.date(u, JS_DEFAULT_DATETIME_fmt_JS));
  var C,
    A,
    k = 1 == needShowAllAsset,
    j = t + "_" + a,
    N = Groups[j];
  N
    ? (N.attr("t") != i && (N.attr("t", i), N.children().eq(0).text(i)),
      (C = N.parent()))
    : ((C = $("<tbody></tbody>").appendTo("#" + t)),
      (N = A = $("<tr></tr>").attr("g", a).attr("t", i).appendTo(C)),
      $(
        "<th style='background-color: #fff;'><input style='margin: 0px 4px; height: 16px; width: 16px;' type='checkbox' class='showall'></input></th>"
      )
        .attr("title", JS_SHOW_ALL)
        .appendTo(A)
        .find("input")
        .prop("checked", k)
        .css({ opacity: k ? 1 : 0.5 }),
      $(
        "<th style='background-color: #fff;'><input style='margin: 0px 4px; height: 16px; width: 16px;' type='checkbox' class='trackall'></input></th>"
      )
        .attr("title", JS_TRACK_ALL)
        .appendTo(A),
      ($g = $("<th style='word-wrap:break-word;word-break:break-all;'></th>")
        .text(i)
        .attr("colspan", "8")),
      0 == JS_DEFAULT_COLLAPSED
        ? $g.addClass("group open").appendTo(A)
        : $g.addClass("group close").appendTo(A),
      (Groups[j] = N));
  var O = GroupItem[t + "_" + o];
  if (O) {
    var D = O.find("td:eq(6)").attr("a");
    O.attr("s", v.sta)
      .attr("n", o)
      .attr("i", p)
      .attr("sval", v.val)
      .attr("st", x)
      .attr("ic", f)
      .attr("ar", g);
    var J = O.children();
    if (
      (J.eq(2)
        .attr("c", n)
        .attr("x", l)
        .attr("y", d)
        .attr("sp", b)
        .attr("d", c)
        .attr("i", p)
        .attr("t", h)
        .attr("dn", E)
        .attr("dt", S)
        .attr("io", T)
        .attr("zt", zt)
        .attr("ex", w)
        .html(
          n +
            "<br/><span style='font-size:12px; color:#808080; white-space: nowrap;'>" +
            h +
            "</span>"
        ),
      J.eq(3).text(v.tip).attr("tip", v.tip),
      J.eq(5).attr("v", m),
      J.eq(6).attr("a", _),
      J.eq(7).attr("takn", getIdValue("5A:", T, !0)),
      J.eq(8).attr("takp", getIdValue("5B:", T, !0)),
      O.attr("g") != a)
    ) {
      O.attr("g", a);
      var L = O.parent();
      if ((O.next().remove(), O.remove(), 1 == L.children().length)) {
        var F = L.children().eq(0).attr("g");
        L.remove(), delete Groups[t + "_" + F];
      }
      O.appendTo(C),
        (A = $("<tr class='end_state'></tr>").insertAfter(O)),
        $("<td></td>").text("").appendTo(A),
        $("<td></td>").text("").appendTo(A),
        ($td = $("<td colspan=8></td>").appendTo(A)),
        $("<ul style='list-style: none;'></ul>").appendTo($td);
      q = $(window).width() - 15 - 15 - 32 - 32;
      $("<li style='width: " + 0.2 * q + "px;' id='temp_1'></li>").appendTo(
        $td
      ),
        $("<li style='width: " + 0.2 * q + "px;' id='fuel_1'></li>").appendTo(
          $td
        ),
        $(
          "<li style='width: " +
            0.2 * q +
            "px; cursor:pointer;' id='mil_24'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.2 * q + "px;' id='max_speed_24'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.197 * q + "px;' id='moving_time_24'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.2 * q + "px;' id='idle_time_24'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.2 * q + "px;' id='stop_time_24'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.2 * q + "px;' id='engine_time_24'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.197 * q + "px;' id='total_mil'></li>"
        ).appendTo($td),
        $(
          "<li style='width: " + 0.205 * q + "px;' id='door_state'></li>"
        ).appendTo($td),
        $("<li id='last_driver'></li>").appendTo($td);
    }
    if (
      (e == o && (needloc = !0),
      _ > D && 1 == JS_DEFAULT_SOUND_ALARM && playAlarm(),
      "tree_all" == t && _ > D && 1 == JS_DEFAULT_POPUP_ALARM)
    )
      loadEventInfo(o, {
        n: o,
        c: n,
        nc: r,
        si: s,
        v: m,
        x: l,
        y: d,
        i: p,
        sta: v.sta,
        d: c,
        t: h,
        ts: u,
        spd: v.spd,
        a: _,
        s: b,
        st: x,
        io: T,
        dt: S,
        jb: I,
        dn: E,
      });
  } else {
    O = A = $("<tr></tr>")
      .attr("g", a)
      .attr("s", v.sta)
      .attr("n", o)
      .attr("i", p)
      .attr("sval", v.val)
      .attr("st", x)
      .attr("ic", f)
      .attr("ar", g)
      .appendTo(C);
    var M = !1;
    if ("tree_all" != t) {
      var P = GroupItem["tree_all_" + o];
      P &&
        ((k = P.find("td:eq(0) input").is(":checked")),
        (M = P.find("td:eq(1) input").is(":checked")));
    }
    if (
      ($(
        "<td><input style='margin: 0px 4px; height: 16px; width: 16px;' type='checkbox'></input></td>"
      )
        .attr("n", o)
        .attr("title", JS_SHOW)
        .appendTo(A)
        .find("input")
        .prop("checked", k),
      $(
        "<td><input style='margin: 0px 4px; height: 16px; width: 16px;;' type='checkbox'></input></td>"
      )
        .attr("n", o)
        .attr("title", JS_TRACK)
        .appendTo(A)
        .find("input")
        .prop("checked", M),
      $("<td style='word-wrap:break-word;word-break:break-all;'></td>")
        .attr("c", n)
        .attr("x", l)
        .attr("y", d)
        .attr("sp", b)
        .attr("d", c)
        .attr("i", p)
        .attr("t", h)
        .attr("dn", E)
        .attr("dt", S)
        .attr("io", T)
        .attr("zt", zt)
        .attr("ex", w)
        .html(
          n +
            "<br/><span style='font-size:12px; color:#808080; white-space: nowrap;'>" +
            h +
            "</span>"
        )
        .appendTo(A),
      $("<td></td>").text(v.tip).attr("tip", v.tip).appendTo(A),
      $("<td></td>").appendTo(A),
      $("<td></td>").attr("v", m).appendTo(A),
      $("<td></td>").attr("a", _).appendTo(A),
      $("<td></td>").attr("takn", getIdValue("5A:", T, !0)).appendTo(A),
      $("<td></td>").attr("takp", getIdValue("5B:", T, !0)).appendTo(A),
      $("<td></td>").appendTo(A),
      (GroupItem[t + "_" + o] = O),
      _ > 0 && 1 == JS_DEFAULT_SOUND_ALARM && playAlarm(),
      "tree_all" == t && _ > 0 && 1 == JS_DEFAULT_POPUP_ALARM)
    )
      loadEventInfo(o, {
        n: o,
        c: n,
        nc: r,
        si: s,
        v: m,
        x: l,
        y: d,
        i: p,
        sta: v.sta,
        d: c,
        t: h,
        ts: u,
        spd: v.spd,
        a: _,
        s: b,
        st: x,
        io: T,
        dt: S,
        jb: I,
        dn: E,
      });
    (A = $("<tr class='end_state'></tr>").insertAfter(O)),
      $("<td></td>").text("").appendTo(A),
      $("<td></td>").text("").appendTo(A),
      ($td = $("<td colspan=8></td>").appendTo(A)),
      $("<ul style='list-style: none;'></ul>").appendTo($td);
    var q = $(window).width() - 15 - 15 - 32 - 32;
    $("<li style='width: " + 0.2 * q + "px;' id='temp_1'></li>").appendTo($td),
      $("<li style='width: " + 0.2 * q + "px;' id='fuel_1'></li>").appendTo(
        $td
      ),
      $(
        "<li style='width: " +
          0.2 * q +
          "px; cursor:pointer;' id='mil_24'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.2 * q + "px;' id='max_speed_24'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.197 * q + "px;' id='moving_time_24'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.2 * q + "px;' id='idle_time_24'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.2 * q + "px;' id='stop_time_24'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.2 * q + "px;' id='engine_time_24'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.197 * q + "px;' id='total_mil'></li>"
      ).appendTo($td),
      $(
        "<li style='width: " + 0.205 * q + "px;' id='door_state'></li>"
      ).appendTo($td),
      $("<li id='last_driver'></li>").appendTo($td);
  }
  if (
    (O.parent().children().eq(0).find("th:eq(2)").hasClass("open")
      ? (O.show(), O.next().show())
      : (O.hide(), O.next().hide()),
    y && e == o && (O.addClass("active"), O.next().addClass("active")),
    ChangeItems.push(O),
    y)
  )
    try {
      historyid != o &&
        y.DrawIcon(
          o,
          n,
          r,
          s,
          m,
          l,
          d,
          p,
          v.sta,
          c,
          h,
          u,
          v.spd,
          _,
          !1,
          b,
          x,
          T,
          S,
          I,
          E,
          ANIMATION_TIME
        ),
        k && !historymode && y.HideShowMarker(!0, o),
        O.find("td:eq(1) input").is(":checked") && historyid != o
          ? map_locate(o, e == o && !historymode, e == o, !0, !1)
          : O.find("td:eq(0) input").is(":checked") &&
            e == o &&
            !historymode &&
            map_locate(o, !0, !1, !1, !1);
    } catch (t) {}
}
function findGroupItem(t, e) {
  return !!GroupItem[t + "_" + e];
}
function removeGroupItem(t, e, a) {
  var i = t + "_" + a,
    o = GroupItem[i];
  o && (o.next().remove(), o.remove(), delete GroupItem[i]);
  var n = t + "_" + e,
    r = Groups[n];
  if (r && 1 == r.parent().children().length) {
    var s = r.parent();
    r.remove(), s.remove(), delete Groups[n];
  }
}
function deleteObject(t, e) {
  findGroupItem("tree_online", e) && removeGroupItem("tree_online", t, e),
    findGroupItem("tree_offline", e) && removeGroupItem("tree_offline", t, e),
    findGroupItem("tree_expired", e) && removeGroupItem("tree_expired", t, e),
    findGroupItem("tree_all", e) && removeGroupItem("tree_all", t, e),
    delete window.parent.JS_DEVICE_FLAG4ID[e],
    map.RemoveMarker(e),
    updateStatusCount();
}
function deleteGroup(t) {
  var e = "tree_all_" + t;
  if (null != Groups[e] && void 0 !== Groups[e]) {
    var a = Groups[e].parent().children();
    $(a).each(function (e, a) {
      var i = $(a).attr("n");
      i && deleteObject(t, i);
    });
  }
}
function addGroup(t, e, a, i) {
  for (var o, n = 0; n < t.item.length; n++) {
    setStatusById((o = t.item[n]).n, o.e);
    var r = getSpeedState(o.on, o.v, o.s, o.t, o.a, o.ar, o.io);
    0 == o.on
      ? (!i &&
          findGroupItem("tree_online", o.n) &&
          removeGroupItem("tree_online", t.gid, o.n),
        -1 == o.s
          ? (!i &&
              findGroupItem("tree_offline", o.n) &&
              removeGroupItem("tree_offline", t.gid, o.n),
            addGroupItem(
              "tree_expired",
              e,
              t.gid,
              t.gtxt,
              o.n,
              o.c,
              o.nc,
              o.si,
              o.x,
              o.y,
              o.i,
              o.d,
              o.t,
              o.ts,
              o.v,
              o.a,
              o.ic,
              o.ar,
              r,
              null,
              o.st,
              o.io,
              o.dt,
              o.s,
              o.jb,
              o.dn,
              o.ex
            ))
          : (!i &&
              findGroupItem("tree_expired", o.n) &&
              removeGroupItem("tree_expired", t.gid, o.n),
            addGroupItem(
              "tree_offline",
              e,
              t.gid,
              t.gtxt,
              o.n,
              o.c,
              o.nc,
              o.si,
              o.x,
              o.y,
              o.i,
              o.d,
              o.t,
              o.ts,
              o.v,
              o.a,
              o.ic,
              o.ar,
              r,
              null,
              o.st,
              o.io,
              o.dt,
              o.s,
              o.jb,
              o.dn,
              o.ex
            )))
      : (!i &&
          findGroupItem("tree_offline", o.n) &&
          removeGroupItem("tree_offline", t.gid, o.n),
        !i &&
          findGroupItem("tree_expired", o.n) &&
          removeGroupItem("tree_expired", t.gid, o.n),
        addGroupItem(
          "tree_online",
          e,
          t.gid,
          t.gtxt,
          o.n,
          o.c,
          o.nc,
          o.si,
          o.x,
          o.y,
          o.i,
          o.d,
          o.t,
          o.ts,
          o.v,
          o.a,
          o.ic,
          o.ar,
          r,
          null,
          o.st,
          o.io,
          o.dt,
          o.s,
          o.jb,
          o.dn,
          o.ex
        )),
      addGroupItem(
        "tree_all",
        e,
        t.gid,
        t.gtxt,
        o.n,
        o.c,
        o.nc,
        o.si,
        o.x,
        o.y,
        o.i,
        o.d,
        o.t,
        o.ts,
        o.v,
        o.a,
        o.ic,
        o.ar,
        r,
        a,
        o.st,
        o.io,
        o.dt,
        o.s,
        o.jb,
        o.dn,
        o.ex
      );
  }
  o = null;
}
function clearList(t) {
  $("#" + t + " tbody").remove();
}
function loadEventInfo(keyid, toastShow) {
  var timer = null,
    needfish = 1;
  (void 0 !== toastShow && 0 != toastShow) ||
    (showLoading(!0),
    (timer = setTimeout("showLoading(false,true)", requestTimeout)),
    (needfish = 0)),
    $.get(
      "../alarm.ajax.php",
      { objid: keyid, needfish: needfish },
      function (data) {
        try {
          if (void 0 === toastShow || 0 == toastShow) {
            showLoading(!1), null != timer && clearTimeout(timer);
            var json = eval("(" + data + ")");
            $("#event-table").empty(),
              $("#event-table").animate({ scrollTop: 0 }, 0);
            for (var i = 0; i < json.length; i++)
              var jo = json[i],
                $tbody = $("<div class='event-table-body'></div>").appendTo($("#event-table")),
                $tr = $("<div></div>").appendTo($tbody),
                $td_time = $("<div></div>")
                  .text($.format.date(jo.t, JS_DEFAULT_DATETIME_fmt_JS))
                  .appendTo($tr),
                $td_object = $("<div></div>").text(jo.c).appendTo($tr),
                $td_event = $("<div></div>").text(jo.a).appendTo($tr);
          } else
            for (
              var json = eval("(" + data + ")"), i = 0;
              i < json.length;
              i++
            ) {
              var jo = json[i];
              jo.n > lastAlarmId &&
                ((toastShow.x = jo.x),
                (toastShow.y = jo.y),
                (toastShow.s = jo.s),
                (toastShow.t = jo.t),
                (toastShow.st = jo.st),
                (toastShow.io = jo.io),
                toastr.error(
                  $.format.date(jo.t, JS_DEFAULT_DATETIME_fmt_JS) +
                    "<br>" +
                    jo.a,
                  toastShow.c,
                  {
                    closeButton: !0,
                    debug: !1,
                    newestOnTop: !1,
                    progressBar: !1,
                    positionClass: "toast-top-right",
                    preventDuplicates: !1,
                    onclick: function () {
                      if (map)
                        try {
                          map.DrawIcon(
                            toastShow.n,
                            toastShow.c,
                            toastShow.nc,
                            toastShow.si,
                            toastShow.v,
                            toastShow.x,
                            toastShow.y,
                            toastShow.i,
                            toastShow.sta,
                            toastShow.d,
                            toastShow.t,
                            toastShow.ts,
                            toastShow.spd,
                            toastShow.a,
                            !1,
                            toastShow.s,
                            toastShow.st,
                            toastShow.io,
                            toastShow.dt,
                            toastShow.jb,
                            toastShow.dn
                          ),
                            map.HideShowMarker(!0, toastShow.n),
                            map_locate(toastShow.n, !0, !1, !1, !0),
                            releaseTrack(),
                            alarmtimer &&
                              (clearTimeout(alarmtimer), (alarmtimer = null)),
                            (alarmtimer = setTimeout(
                              "clearAlarm(" + toastShow.n + ");",
                              6e4
                            ));
                        } catch (t) {
                          alert(t);
                        }
                    },
                    showDuration: "300",
                    hideDuration: "1000",
                    timeOut: "300000",
                    extendedTimeOut: "1000",
                    showEasing: "swing",
                    hideEasing: "linear",
                    showMethod: "fadeIn",
                    hideMethod: "fadeOut",
                  }
                ),
                (lastAlarmId = jo.n));
            }
        } catch (t) {
          showLoading(!1);
        }
      }
    );
}
function clearAlarm(t) {
  $("#tab_all .tree_table")
    .find("tbody tr[n=" + t + "]")
    .find("td:eq(0) input")
    .is(":checked") || map.HideShowMarker(!1, t);
}
function showTaskInfo(tname) {
  showLoading(!0);
  var timer = setTimeout("showLoading(false,true)", requestTimeout);
  try {
    $.post(
      "../manage.task.ajax.php",
      { type: 13, tname: tname },
      function (data) {
        clearTimeout(timer), showLoading(!1);
        var jo = eval("(" + data + ")");
        if (
          null != jo &&
          void 0 !== jo &&
          null != jo.jsons &&
          void 0 !== jo.jsons &&
          null != jo.jsone &&
          void 0 !== jo.jsone
        ) {
          $("#maptools #ed_task").addClass("tool_active"),
            $("#maptools #ed_task").css({ opacity: 1 }),
            $("#maptools #ed_task")
              .attr("tid", jo.jsons[0].tid)
              .attr("oid", jo.jsons[0].oid);
          var waypoints = [],
            startLocation = [],
            endLocation = [],
            message = [];
          if (1 == jo.jsons[0].at) {
            var apts = jo.jsons[0].ap.split(",");
            startLocation = [apts[0], apts[1]];
          } else if (2 == jo.jsons[0].at) {
            var apts = jo.jsons[0].ap.split(";");
            startLocation = ext.RectangleCenter(
              parseFloat(apts[0].split(",")[0]),
              parseFloat(apts[0].split(",")[1]),
              parseFloat(apts[1].split(",")[0]),
              parseFloat(apts[1].split(",")[1])
            );
          } else if (3 == jo.jsons[0].at) {
            for (
              var route = [], points = jo.jsons[0].ap.split(";"), i = 0;
              i < points.length;
              i++
            ) {
              var point = [points[i].split(",")[0], points[i].split(",")[1]];
              route.push(point);
            }
            startLocation = ext.PolygonCenter(route);
          } else if (4 == jo.jsons[0].at) {
            var apts = jo.jsons[0].ap.split(",");
            startLocation = [apts[0], apts[1]];
          } else if (5 == jo.jsons[0].at) {
            for (
              var route = [], points = jo.jsons[0].ap.split(";"), i = 0;
              i < points.length;
              i++
            ) {
              var point = [points[i].split(",")[0], points[i].split(",")[1]];
              route.push(point);
            }
            startLocation = ext.PolylineCenter(route);
          }
          if (
            (message.push(
              JS_TASK_START +
                "</br>(" +
                jo.jsons[0].sf +
                " - " +
                jo.jsons[0].st +
                ")"
            ),
            1 == jo.jsone[0].at)
          ) {
            var apts = jo.jsone[0].ap.split(",");
            endLocation = [apts[0], apts[1]];
          } else if (2 == jo.jsone[0].at) {
            var apts = jo.jsone[0].ap.split(";");
            endLocation = ext.RectangleCenter(
              parseFloat(apts[0].split(",")[0]),
              parseFloat(apts[0].split(",")[1]),
              parseFloat(apts[1].split(",")[0]),
              parseFloat(apts[1].split(",")[1])
            );
          } else if (3 == jo.jsone[0].at) {
            for (
              var route = [], points = jo.jsone[0].ap.split(";"), i = 0;
              i < points.length;
              i++
            ) {
              var point = [points[i].split(",")[0], points[i].split(",")[1]];
              route.push(point);
            }
            endLocation = ext.PolygonCenter(route);
          } else if (4 == jo.jsone[0].at) {
            var apts = jo.jsone[0].ap.split(",");
            endLocation = [apts[0], apts[1]];
          } else if (5 == jo.jsone[0].at) {
            for (
              var route = [], points = jo.jsone[0].ap.split(";"), i = 0;
              i < points.length;
              i++
            ) {
              var point = [points[i].split(",")[0], points[i].split(",")[1]];
              route.push(point);
            }
            endLocation = ext.PolylineCenter(route);
          }
          message.push(
            JS_TASK_END +
              "</br>(" +
              jo.jsone[0].ef +
              " - " +
              jo.jsone[0].et +
              ")"
          ),
            waypoints.push(startLocation),
            waypoints.push(endLocation),
            map.ActiveTaskPathTool(!1),
            map.ActiveTaskPathTool(!0, waypoints, message),
            showPage("page_map");
        } else showMessage("info", JS_TASK_INFO, JS_NO_TASK);
      }
    );
  } catch (t) {
    showLoading(!1), showMessage("info", JS_TASK_INFO, JS_NO_TASK);
  }
}
function disableCurrentTask() {
  var opts = {
    type: 14,
    state: 4,
    tid: $("#maptools #ed_task").attr("tid"),
    oid: $("#maptools #ed_task").attr("oid"),
  };
  showLoading(!0);
  var timer = setTimeout("showLoading(false,true)", requestTimeout);
  try {
    $.post("../manage.task.ajax.php", opts, function (data) {
      clearTimeout(timer), showLoading(!1);
      var result = eval("(" + data + ")");
      "ok" == result.status
        ? ($("#maptools #ed_task").removeClass("tool_active"),
          $("#maptools #ed_task").css({ opacity: 0.5 }),
          $("#maptools #ed_task").removeAttr("tid").removeAttr("oid"),
          map.ActiveTaskPathTool(!1),
          showMessage("succ", JS_TASK_INFO, JS_DISABLE_TASK_SUCC))
        : -20 == result.error
        ? showMessage("stop", JS_TASK_INFO, JS_NO_PERMISSION)
        : showMessage("stop", JS_TASK_INFO, JS_DISABLE_TASK_FAIL);
    });
  } catch (t) {
    showLoading(!1), showMessage("info", JS_TASK_INFO, JS_NO_TASK);
  }
}
function showLastPhoto(keyid) {
  showLoading(!0);
  var timer = setTimeout("showLoading(false,true)", requestTimeout);
  $.get("../last.photo.ajax.php", { objid: keyid }, function (data) {
    clearTimeout(timer), showLoading(!1);
    try {
      var jo = eval("(" + data + ")");
      null != jo && "none" != jo
        ? (($dlg = $("#dlg_lastphoto")),
          $("#lastphoto").empty(),
          $dlg.css("display", "block"),
          $("body").append(
            "<div class='modalmask' ontouchmove='event.preventDefault();'></div>"
          ),
          $dlg.append("<span id='close' class='dialog_cancel'></span>"),
          $dlg.find("#close").click(function () {
            $dlg.css("display", "none"),
              $(this).remove(),
              $(".modalmask").remove();
          }),
          $dlg.find("#button_ok").click(function () {
            $dlg.css("display", "none"),
              $dlg.find("#close").remove(),
              $(".modalmask").remove();
          }),
          $("#phototime").html(jo.time),
          $("#lastphoto").append(jo.img),
          $dlg.css(
            "top",
            Math.round(
              document.body.clientHeight / 2 - ($dlg.height() / 3) * 2
            ) + "px"
          ),
          $dlg.css(
            "left",
            Math.round(document.body.clientWidth / 2 - $dlg.width() / 2) + "px"
          ))
        : showMessage("info", JS_LAST_PHOTO, JS_NO_PHOTO);
    } catch (t) {
      showLoading(!1), showMessage("info", JS_LAST_PHOTO, JS_NO_PHOTO);
    }
  });
}
function showLastVoice(keyid) {
  showLoading(!0);
  var timer = setTimeout("showLoading(false,true)", requestTimeout);
  $.get("../last.voice.ajax.php", { objid: keyid }, function (data) {
    clearTimeout(timer), showLoading(!1);
    try {
      var jo = eval("(" + data + ")");
      null != jo && "none" != jo
        ? (($dlg = $("#dlg_lastvoice")),
          $("#lastvoice").empty(),
          $dlg.css("display", "block"),
          $("body").append(
            "<div class='modalmask' ontouchmove='event.preventDefault();'></div>"
          ),
          $dlg.append("<span id='close' class='dialog_cancel'></span>"),
          $dlg.find("#close").click(function () {
            $dlg.css("display", "none"),
              $(this).remove(),
              $(".modalmask").remove();
          }),
          $dlg.find("#button_ok").click(function () {
            $dlg.css("display", "none"),
              $dlg.find("#close").remove(),
              $(".modalmask").remove();
          }),
          $("#voicetime").html(jo.time),
          $("#lastvoice").append(jo.audio),
          $dlg.css(
            "top",
            Math.round(
              document.body.clientHeight / 2 - ($dlg.height() / 3) * 2
            ) + "px"
          ),
          $dlg.css(
            "left",
            Math.round(document.body.clientWidth / 2 - $dlg.width() / 2) + "px"
          ))
        : showMessage("info", JS_LAST_VOICE, JS_NO_VOICE);
    } catch (t) {
      showLoading(!1), showMessage("info", JS_LAST_VOICE, JS_NO_VOICE);
    }
  });
}
function showSharePosition(t) {
  (null != t && null != typeof t) || (t = menu_operator_id),
    $("#mnuOperat").hide(),
    ($dlg = $("#dlg_shareposition")),
    $dlg.find("#shareurl").val(""),
    $dlg.css("display", "block"),
    $dlg.find("#urltr").css("display", "none"),
    $dlg.find("#button_copy").css("display", "none"),
    $("body").append(
      "<div class='modalmask' ontouchmove='event.preventDefault();'></div>"
    ),
    $dlg.append("<span id='close' class='dialog_cancel'></span>"),
    $dlg.find("#close").click(function () {
      $dlg.css("display", "none"), $(this).remove(), $(".modalmask").remove();
    }),
    $dlg.css(
      "top",
      Math.round(document.body.clientHeight / 2 - ($dlg.height() / 3) * 2) +
        "px"
    ),
    $dlg.css(
      "left",
      Math.round(document.body.clientWidth / 2 - $dlg.width() / 2) + "px"
    ),
    $dlg
      .find("#button_ok")
      .unbind("click")
      .click(function () {
        var e = !0;
        if (
          ($("#dlg_shareposition .must").each(function () {
            "" == $(this).val() || null == $(this).val()
              ? ($(this).addClass("invalidbox"), (e = !1))
              : $(this).removeClass("invalidbox");
          }),
          e)
        ) {
          $(".modalmask").remove(),
            $dlg.find("#shareurl").val(""),
            $dlg.find("#urltr").css("display", "none"),
            $dlg.find("#button_copy").css("display", "none");
          var a = $dlg.find("#shareexpired").val();
          getShareToken(t, a);
        }
      });
}
function getShareToken(keyid, expired) {
  showLoading(!0);
  var timer = setTimeout("showLoading(false,true)", requestTimeout);
  $.get(
    "../share.position.ajax.php",
    { objid: keyid, expired: expired },
    function (data) {
      clearTimeout(timer), showLoading(!1);
      try {
        var jo = eval("(" + data + ")");
        null != jo && "none" != jo
          ? (($dlg = $("#dlg_shareposition")),
            $("body").append(
              "<div class='modalmask' ontouchmove='event.preventDefault();'></div>"
            ),
            $dlg
              .find("#shareurl")
              .val(
                window.location.protocol +
                  "//" +
                  window.location.host +
                  "/share.login.ajax.php?token=" +
                  jo.token
              ),
            $dlg.find("#urltr").css("display", "table-row"),
            $dlg.find("#button_copy").css("display", "block"),
            $dlg
              .find("#button_copy")
              .unbind("click")
              .click(function () {
                var t = document.getElementById("shareurl");
                t.select(),
                  t.setSelectionRange(0, 99999),
                  document.execCommand("copy"),
                  showMessage("succ", JS_SHARE_POSITION, JS_SHARE_COPY_SUCCESS);
              }))
          : showMessage("stop", JS_SHARE_POSITION, JS_SHARE_FAIL);
      } catch (t) {
        showMessage("stop", JS_SHARE_POSITION, JS_SHARE_FAIL);
      }
    }
  );
}
function showObjChart() {
  $("#dashboard-table-div").animate({ scrollTop: 0 }, 0),
    $("#dashboard-table").animate({ scrollTop: 0 }, 0);
  var t = getMovingStopCarNumber(),
    e = getTopMileageEngine();
  createObjStateBar(
    getAllNumber(),
    getOnlineNumber(),
    getOfflineNumber(),
    getAlarmCarNumber(),
    getExpiredNumber(),
    t[0],
    t[1],
    t[2],
    t[3],
    e[0],
    e[1],
    e[2],
    e[3],
    getExpireObjByDays()
  );
}
function initCmdParams(t, e) {
  $("#cmderror").css("display", "none"), $("#cmdparam tbody").empty();
  for (
    var i = $("<tbody></tbody>").appendTo($("#cmdparam")), o = 0, n = 0;
    n < protocolCmd.length;
    n++
  )
    if (protocolCmd[n].pid == t && protocolCmd[n].cid == e) {
      var r = $("<tr></tr>").appendTo(i),
        s = "";
      null != protocolCmd[n].units &&
        protocolCmd[n].units.length > 0 &&
        (s = "(" + protocolCmd[n].units + ")");
      var l = $("<td></td>").appendTo(r);
      $("<label></label>")
        .removeClass()
        .addClass("ilabel")
        .text(
          1 == protocolCmd[n].pm
            ? "*" + protocolCmd[n].pn + s
            : protocolCmd[n].pn + s
        )
        .appendTo(l);
      var d,
        p = $("<td></td>").appendTo(r);
      if (0 == protocolCmd[n].vt) {
        if (
          ((d = $("<select></select>")
            .addClass("iselect")
            .addClass("enablebox")
            .appendTo(p)),
          p.attr("ptype", 0),
          null != protocolCmd[n].dv && protocolCmd[n].dv.length > 0)
        ) {
          var c = protocolCmd[n].dv.split(";"),
            h = parseInt(c[0].split("=")[1]);
          for (a = 0; a < c.length; a++) {
            var u = c[a].split("=");
            2 == u.length &&
              (($item = $("<option></option>").appendTo(d)),
              $item.text(u[0]),
              0 == h
                ? $item.attr("value", u[1])
                : $item.attr("value", u[1] - 1));
          }
        }
      } else if (4 == protocolCmd[n].vt)
        (d = $(
          "<div><input type='file' style='display:none' onchange='importFile(this);'/><input type='button' id='import' value='" +
            protocolCmd[n].h +
            "' onclick='loadFile(this);'/></div>"
        ).appendTo(p)),
          p.attr("ptype", 4);
      else if ("%DATE%" == protocolCmd[n].dv) {
        var m =
          ".date_" +
          protocolCmd[n].pid +
          "_" +
          protocolCmd[n].cid +
          "_" +
          protocolCmd[n].paid +
          "_" +
          protocolCmd[n].psn;
        (d = $("<input class='" + m.substring(1) + "'></input>")
          .addClass("itime")
          .addClass("enablebox")
          .appendTo(p)),
          p.attr("ptype", 1);
        var _ = "YYYY-MM-DD";
        initPicker(m, JS_SELECT_TIME, _);
      } else if ("%TIME%" == protocolCmd[n].dv) {
        m =
          ".time_" +
          protocolCmd[n].pid +
          "_" +
          protocolCmd[n].cid +
          "_" +
          protocolCmd[n].paid +
          "_" +
          protocolCmd[n].psn;
        (d = $("<input class='" + m.substring(1) + "'></input>")
          .addClass("itime")
          .addClass("enablebox")
          .appendTo(p)),
          p.attr("ptype", 2);
        _ = "HH:mm";
        initPicker(m, JS_SELECT_TIME, _);
      } else
        (d = $("<input></input>")
          .removeClass()
          .addClass("itext")
          .addClass("enablebox")
          .appendTo(p)),
          p.attr("ptype", 3),
          null != protocolCmd[n].dv &&
            0 != protocolCmd[n].dv.indexOf("%") &&
            d.val(protocolCmd[n].dv);
      1 == protocolCmd[n].pm && d.addClass("must"),
        d.attr("valuetype", protocolCmd[n].vt),
        d.attr("maxlen", protocolCmd[n].maxl),
        d.attr("minvalue", protocolCmd[n].minv),
        d.attr("maxvalue", protocolCmd[n].maxv),
        d.attr("limit", protocolCmd[n].l),
        o++;
    }
  if (0 == o) {
    var f = $("<td></td>").appendTo(i);
    $("<label></label>")
      .removeClass()
      .addClass("ilabel")
      .text(JS_NO_NEED_PARAM)
      .appendTo(f);
  }
}
function loadFile(t) {
  $(t).prev().click();
}
function importFile(t) {
  var e = t.files[0],
    a = e.name,
    i = e.size;
  console.log("file:" + a + ",size：" + i);
  var o = new FileReader();
  o.readAsArrayBuffer(e),
    (o.onloadend = function (e) {
      var a = e.target.result,
        o = new Uint8Array(a, 0, i);
      console.log(buf2hex(o)),
        $(t).parent().attr("file", buf2hex(o)),
        $(t).parent().parent().css("background-color", "white");
    });
}
function buf2hex(t) {
  return Array.prototype.map
    .call(new Uint8Array(t), function (t) {
      return ("00" + t.toString(16)).slice(-2);
    })
    .join("");
}
function showSendCmd(t) {
  if (null != t && 0 != t.length && null != typeCmd && 0 != typeCmd.length) {
    var e = getTypeById(getIdByFlag(t));
    null != e && null != typeof e && dlgSendCmd(t, e);
  }
}
function dlgDeviceInfo(keyid, ios) {
  showLoading(!0);
  var timer = setTimeout("showLoading(false,true)", requestTimeout);
  $.get("../devinfo.ajax.php", { objid: keyid }, function (data) {
    clearTimeout(timer), showLoading(!1);
    try {
      $("#object_detail").css("display", "block"),
        $("#object_list").css("display", "none");
      var jo = eval("(" + data + ")");
      $("#object_detail_list tbody").empty();
      var $tbody = $("<tbody></tbody>").appendTo($("#object_detail_list")),
        $tr = $("<tr></tr>").appendTo($tbody);
      $("<td></td>").text(OBJECT_INFO_FLAG).appendTo($tr),
        $("<td></td>").text(jo.oflag).appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_TYPE).appendTo($tr),
        $("<td></td>").text(jo.dtype).appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_DEVICE_ID).appendTo($tr),
        $("<td></td>").text(jo.devno).appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_SIMCARD).appendTo($tr),
        $("<td></td>").text(jo.simno).appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_INSTALLTIME).appendTo($tr),
        $("<td></td>")
          .text($.format.date(jo.itime, JS_DEFAULT_DATE_FMT))
          .appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_EXPIRETIME).appendTo($tr),
        $("<td></td>")
          .text($.format.date(jo.etime, JS_DEFAULT_DATE_FMT))
          .appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_CUSTNAME).appendTo($tr),
        $("<td></td>").text(jo.custname).appendTo($tr),
        ($tr = $("<tr></tr>").appendTo($tbody)),
        $("<td></td>").text(OBJECT_INFO_CONTACTPHONE).appendTo($tr),
        $("<td></td>").text(jo.custphone).appendTo($tr),
        showObjectStatus(keyid);
    } catch (t) {
      showLoading(!1);
    }
  }),
    $("#last5day_mil").empty(),
    $("#last5day_eng").empty(),
    $("#last5day_load").empty();
  var timer_2 = setTimeout("queryingMilEng = false", requestTimeout);
  $.get(
    "../stastics.ajax.php",
    { rtime: !0, objid: keyid, type: 51, etime: getCurentDateTime() },
    function (data) {
      clearTimeout(timer_2);
      try {
        var json = eval("(" + data + ")");
        if (null != json && json.length > 0) {
          objLastMiEg[keyid] = json;
          var $elementMi = $("#last5day_mil"),
            $elementEg = $("#last5day_eng"),
            $elementLd = $("#last5day_load");
          createLast5daysMiEgBar(keyid, $elementMi, $elementEg, $elementLd);
        }
      } catch (t) {
        queryingMilEng = !1;
      }
    }
  ),
    $("#last5day_tire").empty();
  var $tiredatas = parseTireData(getIdValue("51:", ios, !0));
  if (0 == $tiredatas.index.length) {
    var noTire = $(
      "<label nowrap='nowrap' style='padding: 2px; height: 60px; width: 100%; font-size:15pt; color: #AAAAAA; line-height: 70px;'></label>"
    ).text(JS_NO_DATA);
    $("#last5day_tire").append(noTire),
      $("#last5day_tire").css({ "min-width": "100px", "text-align": "center" });
  } else
    $("#last5day_tire").css("min-width", "100%"),
      createTiresensorBar(
        $tiredatas.index,
        $tiredatas.tire,
        $tiredatas.temp,
        $tiredatas.bat
      );
}
function parseTireData(t) {
  var e = { index: [], tire: [], temp: [], bat: [] };
  if (null != t && t.length > 0) {
    var a = t.split("&");
    if (a.length > 0)
      for (var i = 0; i < a.length; i++)
        if (null != a[i] && a[i].length > 0) {
          var o = a[i].split("*");
          null != o &&
            4 == o.length &&
            (e.index.push(parseInt(o[0])),
            e.tire.push(tpmsUnitConversion(parseFloat(o[1]), JS_UNIT_TPMS)),
            e.temp.push(
              tempUnitConversion(parseFloat(o[2]), JS_UNIT_TEMPERATURE)
            ),
            e.bat.push(parseFloat(parseFloat(o[3]).toFixed(0))));
        }
  }
  return e;
}
function dlgSendCmd(t, e) {
  var a,
    i = $("#cmdul");
  i.empty(),
    $("#cmdparam tbody").empty(),
    $("#cmderror").css("display", "none");
  for (var o = 0; o < typeCmd.length; o++)
    if (typeCmd[o].tid == e) {
      a = typeCmd[o];
      var n = $("<li></li>").attr("cmdid", typeCmd[o].cid).appendTo(i);
      $('<a onmousedown="initCmdParams(' + a.pid + "," + a.cid + ')"></a>')
        .text(typeCmd[o].cn)
        .appendTo(n);
    }
  $("#cmd-send")
    .unbind("click")
    .click(function () {
      $("#cmderror").css("display", "none");
      var t = $("#cflag").val();
      if ("" != t) {
        $("#cflag").removeClass("invalidbox");
        var e = getIdByFlag(t);
        if (null != e && null != typeof e)
          if (
            ($("#cflag").removeClass("invalidbox"),
            null != $("#cmdul li.cmd_active").attr("cmdid"))
          ) {
            var a = !0;
            if (
              ($("#cmdparam")
                .find(".must")
                .each(function () {
                  ("" != $(this).val() && null != $(this).val()) ||
                  4 == $(this).parent().attr("ptype")
                    ? $(this).css("background-color", "white")
                    : ($(this).css("background-color", "red"), (a = !1));
                }),
              a)
            ) {
              var i = !0;
              if (
                ($("#cmdparam")
                  .find(
                    "[valuetype=1],[valuetype=2],[valuetype=3],[valuetype=9]"
                  )
                  .each(function () {
                    var t = $(this).val();
                    if ("" != t) {
                      if (null == t.match(/^[+-]?\d+(\.\d+)?$/))
                        return (
                          $(this).css("background-color", "red"),
                          $("#cmderror")
                            .css("display", "block")
                            .css("color", "red")
                            .text(JS_RANGE_ERROR + $(this).attr("limit")),
                          (i = !1),
                          !1
                        );
                      $(this).css("background-color", "white");
                    }
                    if (
                      null != $(this).attr("limit") &&
                      $(this).attr("limit").indexOf("..") > 0
                    ) {
                      var e = parseFloat($(this).attr("limit").split("..")[0]),
                        a = parseFloat($(this).attr("limit").split("..")[1]);
                      if (parseFloat(t) < e || parseFloat(t) > a)
                        return (
                          $(this).css("background-color", "red"),
                          $("#cmderror")
                            .css("display", "block")
                            .css("color", "red")
                            .text(JS_RANGE_ERROR + $(this).attr("limit")),
                          (i = !1),
                          !1
                        );
                    }
                  }),
                i)
              ) {
                var o = !0;
                if (
                  ($("#cmdparam")
                    .find("[valuetype=5]")
                    .each(function () {
                      var t = $(this).val(),
                        e = parseInt($(this).attr("maxlen"));
                      if (t.length > e)
                        return (
                          $(this).css("background-color", "red"),
                          $("#cmderror")
                            .css("display", "block")
                            .css("color", "red")
                            .text(JS_LENGTH_ERROR + $(this).attr("maxlen")),
                          (o = !1),
                          !1
                        );
                    }),
                  o)
                ) {
                  var n = !0;
                  if (
                    ($("#cmdparam")
                      .find("[valuetype=4]")
                      .each(function () {
                        if (void 0 === $(this).attr("file"))
                          return (
                            $(this).parent().css("background-color", "red"),
                            (n = !1),
                            !1
                          );
                        $(this).parent().css("background-color", "white");
                      }),
                    n)
                  ) {
                    var r = "";
                    $("#cmdparam tbody")
                      .find("tr")
                      .each(function () {
                        var t = $(this).children().eq(1);
                        r =
                          0 == t.attr("ptype")
                            ? r +
                              $(this).children().eq(1).find("select").val() +
                              ","
                            : r +
                              $(this).children().eq(1).find("input").val() +
                              ",";
                      });
                    var s = {
                      objid: e,
                      cmdid: $("#cmdul li.cmd_active").attr("cmdid"),
                      params: r.substring(0, r.length - 1),
                    };
                    showLoading(!0);
                    var l = setTimeout(function () {
                      $(".modalmask").remove(), showLoading(!1, !0);
                    }, requestTimeout);
                    try {
                      $.get("../command.ajax.php", s, function (t) {
                        clearTimeout(l),
                          showLoading(!1),
                          t.indexOf("ok") >= 0
                            ? ($(".modalmask").remove(),
                              showMessage(
                                "succ",
                                JS_CMD_SENDCMD,
                                JS_CMD_SEND_SUCC
                              ))
                            : alert(t);
                      });
                    } catch (t) {
                      error(showLoading(!1));
                    }
                  }
                }
              }
            }
          } else
            $("#cmderror")
              .css("display", "block")
              .css("color", "red")
              .text(JS_SELECT_ONE_CMD);
        else $("#cflag").addClass("invalidbox");
      } else $("#cflag").addClass("invalidbox");
    }),
    $("#cmdul li a").click(function () {
      $(".cmd_active").removeClass("cmd_active"),
        $(this).parent().addClass("cmd_active");
    });
}
function updateOne(t) {
  var e = t.attr("n"),
    a = t.attr("s"),
    i = t.attr("i"),
    o = t.find("td:eq(6)").attr("a"),
    n = t.attr("st"),
    r = t.attr("sval"),
    s = t.find("td:eq(7)").attr("takn"),
    l = t.find("td:eq(8)").attr("takp"),
    d = t.hasClass("active"),
    p = t.find("td:eq(2)").attr("io"),
    c = t.attr("ic"),
    h = t.find("td:eq(2)").attr("dn");
  if (
    (t
      .attr("class", "normal")
      .find("td:eq(2)")
      .css({
        background: "url(../img/icons/icon_" + i + ".svg) no-repeat 5px center",
        "padding-left": "30px",
        "background-size": "20px 20px",
      }),
    0 == o
      ? (t.css("background-color", ""), t.next().css("background-color", ""))
      : (t.css("background-color", c), t.next().css("background-color", c)),
    d && (t.addClass("active"), t.next().addClass("active")),
    t.find("td:eq(3)").removeClass().removeAttr("title"),
    t.find("td:eq(5)").removeClass().removeAttr("title"),
    t.find("td:eq(6)").removeClass().removeAttr("title"),
    t.find("td:eq(7)").removeClass().removeAttr("title"),
    t.find("td:eq(8)").removeClass().removeAttr("title"),
    t.find("td:eq(9)").removeClass().removeAttr("title"),
    "0" == a)
  )
    t.find("td:eq(4)")
      .attr("class", "offline")
      .attr("title", JS_TIP_OBJ_OFFLINE);
  else if (
    (t
      .find("td:eq(4)")
      .attr("class", "online")
      .attr("title", JS_TIP_OBJ_ONLINE),
    null != typeof n && null != n && n.indexOf("3005") >= 0)
  )
    t.find("td:eq(3)").attr("class", "engine_on").attr("title", JS_ENGINE_ON);
  else {
    window.parent;
    null != typeof n &&
    null != n &&
    n.indexOf("3006") >= 0 &&
    null != r &&
    r > 0
      ? t
          .find("td:eq(3)")
          .attr("class", "engine_off")
          .attr("title", JS_ENGINE_OFF)
      : t.find("td:eq(3)").attr("class", "parking").attr("title", JS_PARKING);
  }
  t.find("td:eq(9)").attr("class", "menu").attr("title", JS_ASSET_CONTROL);
  var u = getIdValue("62:", p, !0);
  null != typeof u && null != u
    ? "0" == u
      ? t.find("td:eq(6)").attr("class", "gpsvalid").attr("title", JS_GPS_VALID)
      : t
          .find("td:eq(6)")
          .attr("class", "cellvalid")
          .attr("title", JS_LBS_VALID)
    : null != typeof n && n.indexOf("200E") >= 0
    ? t.find("td:eq(6)").attr("class", "gpsvalid").attr("title", JS_GPS_VALID)
    : t
        .find("td:eq(6)")
        .attr("class", "invalid")
        .attr("title", JS_LOCATION_INVALID),
    o > 0 &&
      t
        .find("td:eq(7)")
        .attr("class", "alarm")
        .attr("title", JS_ALARM_INFO)
        .unbind("click")
        .click(function (t) {
          showPage("page_events");
        }),
    "-1" == r
      ? t.css("text-decoration", "line-through")
      : t.css("text-decoration", "none"),
    null != s &&
      void 0 !== s &&
      t
        .find("td:eq(7)")
        .attr("class", "tasknew")
        .attr("title", JS_TASK_NEW_INFO)
        .unbind("click")
        .click(function (t) {
          showTaskInfo(s);
        }),
    null != l &&
      void 0 !== l &&
      t
        .find("td:eq(8)")
        .attr("class", "taskprocessing")
        .attr("title", JS_TASK_PROCESSING_INFO)
        .unbind("click")
        .click(function (t) {
          showTaskInfo(l);
        }),
    t
      .find("td:eq(9)")
      .unbind("click")
      .click(function (t) {
        dlgDeviceInfo(e, p);
      }),
    ($tr = t.next());
  var m = getIdValue("48:", p),
    _ = "--";
  null != m && (_ = tempUnitConversion(m, JS_UNIT_TEMPERATURE));
  var f = "--";
  null != (m = getIdValue("49:", p)) &&
    (f = tempUnitConversion(m, JS_UNIT_TEMPERATURE));
  var g = (_ + "," + f + UNIT_TEMP).replace("--,", "").replace(",--", "");
  $tr.find("#temp_1").text(g);
  var v = "--";
  null != (m = getIdValue("1E:", p)) &&
    (v = fuelUnitConversion(m, JS_UNIT_FUEL));
  var y = "--";
  null != (m = getIdValue("1F:", p)) &&
    (y = fuelUnitConversion(m, JS_UNIT_FUEL));
  var x = (v + "," + y + UNIT_FUEL).replace("--,", "").replace(",--", "");
  $tr.find("#fuel_1").text(x);
  var T = "--";
  null != (m = getIdValue("3F:", p)) &&
    (T = mileageUnitConversion(m, JS_UNIT_DISTANCE)),
    $tr.find("#mil_24").text(T + UNIT_DIST);
  var S = "--";
  null != (m = getIdValue("3C:", p)) &&
    (S = speedUnitConversion(m, JS_UNIT_SPEED)),
    $tr.find("#max_speed_24").text(S + UNIT_SPEED);
  var b = "--";
  null != (m = getIdValue("3D:", p)) && (b = formatSecToStr(m)),
    $tr.find("#moving_time_24").text(b);
  var I = "--";
  null != (m = getIdValue("40:", p)) && (I = formatSecToStr(m)),
    $tr.find("#idle_time_24").text(I);
  var E = "--";
  null != (m = getIdValue("41:", p)) && (E = formatSecToStr(m)),
    $tr.find("#stop_time_24").text(E);
  var w = "--";
  null != (m = getIdValue("3E:", p)) && (w = formatSecToStr(m)),
    $tr.find("#engine_time_24").text(w);
  var C = "--";
  null != (m = getIdValue("A:", p)) &&
    (C = mileageUnitConversion(m, JS_UNIT_DISTANCE)),
    $tr.find("#total_mil").text(C + UNIT_DIST);
  var A = "--";
  null != typeof n && null != n && n.indexOf("3002") >= 0
    ? (A = JS_DOOR_CLOSE)
    : null != typeof n &&
      null != n &&
      n.indexOf("3001") >= 0 &&
      (A = JS_DOOR_OPEN),
    $tr.find("#door_state").text(A);
  var k = "--";
  null != h && h.length > 0 && (k = h),
    $tr.find("#last_driver").text(k),
    $tr.find("#temp_1").attr("class", "temp_1"),
    $tr.find("#fuel_1").attr("class", "fuel_1"),
    $tr.find("#mil_24").attr("class", "mil_24"),
    $tr
      .find("#mil_24")
      .unbind("click")
      .click(function (e) {
        showLast24History(t.attr("n"));
        var a = t.find("td:first-child input"),
          i = t.find("td:eq(1) input");
        a.is(":checked") || a.trigger("click"),
          i.is(":checked") || i.trigger("click");
      }),
    $tr.find("#max_speed_24").attr("class", "max_speed_24"),
    $tr.find("#moving_time_24").attr("class", "moving_time_24"),
    $tr.find("#idle_time_24").attr("class", "idle_time_24"),
    $tr.find("#stop_time_24").attr("class", "stop_time_24"),
    $tr.find("#engine_time_24").attr("class", "engine_time_24"),
    $tr.find("#total_mil").attr("class", "total_mil"),
    $tr.find("#door_state").attr("class", "door_state"),
    $tr.find("#last_driver").attr("class", "last_driver"),
    $tr.find("td li").each(function (t, e) {
      haveInfo(t + 1)
        ? $(this).css("display", "block")
        : $(this).css("display", "none");
    });
}
function showLast24History(objid) {
  map.ClearTrack(objid), showLoading(!0);
  var timer_search = setTimeout("queryTimeout()", 9e4),
    param = {
      objid: objid,
      day: 1,
      time1: "",
      time2: "",
      stop: 5,
      event: 0,
      ptype: 1,
      btype: 1,
    };
  (events = []), (stops = []), (moves = []);
  try {
    $.get("../playback.ajax.php", param, function (data) {
      clearTimeout(timer_search), showLoading(!1);
      try {
        var json = eval("(" + data + ")");
        if (null != json && void 0 !== json.error)
          showMessage("stop", JS_PLAY_TITLE, json.error, 10);
        else if (null != json && void 0 !== json.item && json.item.length > 0) {
          showPage("page_map");
          var hisData = json.item;
          map.DrawTrackLine(
            objid,
            hisData,
            { point: !0 },
            stops,
            !1,
            events,
            !1,
            !0,
            !1,
            moves
          );
        }
      } catch (t) {
        error(showLoading(!1));
      }
    });
  } catch (t) {
    error(showLoading(!1));
  }
}
function playAlarm() {
  var t = $("#player")[0];
  window.ActiveXObject || "ActiveXObject" in window
    ? t.play()
    : t.paused && t.play();
}
var t1,
  tlist = [];
function timerefresh() {
  clearTimeout(t1),
    $.each(tlist, function (t, e) {
      if ((updateOne(e), t >= 20)) return !1;
    }),
    tlist.splice(0, 20),
    tlist.length > 0
      ? (t1 = setTimeout("timerefresh();", 20))
      : clearTimeout(t1);
}
function showAllObj(t) {
  map.HideShowMarker(t);
  var e = $(".tree_table"),
    a = e.find("tbody tr th input.showall");
  $.each(a, function (e, a) {
    t
      ? $(this).css({ opacity: 1 }).prop("checked", !0)
      : $(this).css({ opacity: 0.5 }).prop("checked", !1);
  });
  var i = e.find("tbody tr:gt(0)");
  $.each(i, function (e, a) {
    t
      ? $(a).find("td:first-child input").prop("checked", !0)
      : (map.ClearTrack(),
        $(a).find("td:first-child input").prop("checked", !1),
        $(a).find("td:eq(1) input").prop("checked", !1));
  });
}
function updateShow() {
  var t = $(".tree_table"),
    e = t.find("tbody tr th.group");
  e.unbind("click").click(function () {
    if ($(this).is(".open")) $(this).removeClass("open").addClass("close");
    else {
      var t = $(this).parent().parent().parent().attr("id"),
        e = $(this).parent().parent().find("tr:gt(0):not(.end_state)");
      $.each(e, function (e, a) {
        var i = parseInt($(a).attr("n"));
        updateOne(GroupItem[t + "_" + i]);
      }),
        $(this).removeClass("close").addClass("open");
    }
    $(this).parent().parent().find("tr:gt(0)").toggle();
  }),
    (e = t.find("tbody tr th input.showall"))
      .unbind("click")
      .click(function () {
        if ($(this).is(":checked")) {
          $(this).css({ opacity: 1 });
          var t = $(this).parent().parent().parent().find("tr:gt(0)");
          $.each(t, function (t, e) {
            var a = parseInt($(e).attr("n"));
            map.HideShowMarker(!0, a),
              $(e).find("td:first-child input").prop("checked", !0);
            var i = findpageitems(a);
            $.each(i, function (t, e) {
              $(e).find("td:eq(0) input").prop("checked", !0);
            });
          });
        } else
          $(this).css({ opacity: 0.5 }),
            (t = $(this).parent().parent().parent().find("tr:gt(0)")),
            $.each(t, function (t, e) {
              var a = parseInt($(e).attr("n"));
              map.HideShowMarker(!1, a),
                $(e).find("td:eq(0) input").prop("checked", !1),
                $(e).find("td:eq(1) input").prop("checked", !1);
              var i = findpageitems(a);
              $.each(i, function (t, e) {
                $(e).find("td:eq(0) input").prop("checked", !1),
                  $(e).find("td:eq(1) input").prop("checked", !1);
              });
            }),
            $(this)
              .parent()
              .parent()
              .parent()
              .find("tr th input.trackall")
              .css({ opacity: 0.5 })
              .prop("checked", !1);
      }),
    (e = t.find("tbody tr th input.trackall"))
      .unbind("click")
      .click(function () {
        $(this).is(":checked")
          ? ($(this).css({ opacity: 1 }),
            ($trs = $(this).parent().parent().parent().find("tr:gt(0)")),
            $.each($trs, function (t, e) {
              var a = parseInt($(e).attr("n"));
              map.HideShowMarker(!0, a),
                map_locate(a, !1, !1, !1, !1),
                $(e).find("td:eq(0) input").prop("checked", !0),
                $(e).find("td:eq(1) input").prop("checked", !0);
              var i = findpageitems(a);
              $.each(i, function (t, e) {
                $(e).find("td:eq(0) input").prop("checked", !0),
                  $(e).find("td:eq(1) input").prop("checked", !0);
              });
            }),
            $(this)
              .parent()
              .parent()
              .parent()
              .find("tr th input.showall")
              .css({ opacity: 1 })
              .prop("checked", !0))
          : ($(this).css({ opacity: 0.5 }),
            ($trs = $(this).parent().parent().parent().find("tr:gt(0)")),
            $.each($trs, function (t, e) {
              var a = parseInt($(e).attr("n"));
              map.ClearTrack(a),
                $(e).find("td:eq(1) input").prop("checked", !1);
              var i = findpageitems(a);
              $.each(i, function (t, e) {
                $(e).find("td:eq(1) input").prop("checked", !1);
              });
            }));
      }),
    $.each(ChangeItems, function (t, e) {
      $(e)
        .find("td:first-child input")
        .unbind("click")
        .click(function () {
          $tr = $(e).closest("tr");
          var t = parseInt($tr.attr("n"));
          if ($(this).is(":checked")) {
            map.HideShowMarker(!0, t);
            var a = findpageitems(t);
            $.each(a, function (t, e) {
              $(e).find("td:eq(0) input").prop("checked", !0);
            });
          } else {
            map.HideShowMarker(!1, t),
              map.ClearTrack(t),
              $(e).find("td:eq(1) input").prop("checked", !1);
            a = findpageitems(t);
            $.each(a, function (t, e) {
              $(e).find("td:eq(0) input").prop("checked", !1),
                $(e).find("td:eq(1) input").prop("checked", !1);
            }),
              $(e)
                .parent()
                .find("tr:first-child th:first-child input")
                .prop("checked", !1)
                .css({ opacity: 0.5 });
          }
        });
    }),
    $.each(ChangeItems, function (t, e) {
      $(e)
        .find("td:eq(1) input")
        .unbind("click")
        .click(function () {
          $tr = $(e).closest("tr");
          var t = parseInt($tr.attr("n"));
          if ($(this).is(":checked")) {
            map.HideShowMarker(!0, t),
              $(e).find("td:first-child input").prop("checked", !0);
            var a = findpageitems(t);
            $.each(a, function (t, e) {
              $(e).find("td:eq(0) input").prop("checked", !0),
                $(e).find("td:eq(1) input").prop("checked", !0);
            });
          } else {
            map.ClearTrack(t);
            a = findpageitems(t);
            $.each(a, function (t, e) {
              $(e).find("td:eq(1) input").prop("checked", !1);
            }),
              $(e)
                .parent()
                .find("tr:first-child th:eq(1) input")
                .prop("checked", !1)
                .css({ opacity: 0.5 });
          }
        });
    }),
    $.each(ChangeItems, function (t, e) {
      $(e)
        .find("td:lt(6):gt(1)")
        .unbind("click")
        .bind("click", function (t) {
          $(".active").removeClass("active"),
            $(".active").next().removeClass("active"),
            $(".hover").removeClass("hover"),
            $(".hover").next().removeClass("hover"),
            ($lastselect = $(e).closest("tr")).addClass("active"),
            $lastselect.next().addClass("active");
          var a = parseInt($lastselect.attr("n"));
          current_id = a;
          var i = $lastselect.find("td:eq(2)").attr("t");
          if (
            "-1" != $lastselect.attr("sval") &&
            null != i &&
            "undefined" != i &&
            "" != i
          ) {
            $lastselect.find("td:first-child input").prop("checked", !0);
            var o = findpageitems(a);
            $.each(o, function (t, e) {
              $(e).find("td:eq(0) input").prop("checked", !0);
            }),
              setTimeout(function () {
                showPage("page_map"),
                  map.HideShowMarker(!0, a),
                  map_locate(a, !0, !0, !1, !0);
              }, 50);
          }
        });
    }),
    $.each(ChangeItems, function (t, e) {
      $(e)
        .find("td:lt(4):gt(1)")
        .unbind("swipeleft")
        .bind("swipeleft", function () {
          $(".hover").removeClass("hover"), ($lastselect = $(e).closest("tr"));
          var t = getFlagById(parseInt($lastselect.attr("n")));
          $("#oflag").val(t), showPage("page_history");
        });
    }),
    $.each(ChangeItems, function (t, e) {
      $(e)
        .find("td:lt(4):gt(1)")
        .unbind("swiperight")
        .bind("swiperight", function () {
          $(".hover").removeClass("hover"), ($lastselect = $(e).closest("tr"));
          var t = getFlagById(parseInt($lastselect.attr("n")));
          $("#cflag").val(t),
            showSendCmd($("#cflag").val()),
            showPage("page_cmd");
        });
    }),
    $.each(ChangeItems, function (t, e) {
      $(e)
        .unbind("hover")
        .hover(
          function (t) {
            ($lastselect = $(this)).hasClass("active");
            parseInt($lastselect.attr("n"));
          },
          function () {
            $(".hover").removeClass("hover");
            parseInt($lastselect.attr("n"));
          }
        );
    }),
    $.each(ChangeItems, function (t, e) {
      e.parent().find("th").hasClass("open") && updateOne(e);
    }),
    updateStatusCount();
  var a = getAllAlarm();
  void 0 !== a && a > 0
    ? (a > 10 && (a = "10+"),
      $("#alarm_msg").html(
        "<a href='#'>" + JS_TIP_OBJ_ALARM + "(" + a + ")</a>"
      ),
      $("#alarm_msg").css("background-image", 'url("../img/siren_on.png")'),
      $("#alarm_msg a").css("color", "red"))
    : ($("#alarm_msg").html("<a href='#'>" + JS_TIP_OBJ_ALARM + "(0)</a>"),
      $("#alarm_msg").css("background-image", 'url("../img/siren_off.png")'),
      $("#alarm_msg a").css("color", "white")),
    $("#alarm_msg")
      .unbind("click")
      .click(function () {
        loadEventInfo();
      });
}
function updateStatusCount() {
  $.each($("#mod ul li"), function (t, e) {
    var a = $($(e).attr("target") + " tbody tr:not(tr:first-child)"),
      i = $(e).find("a");
    i.text(i.attr("title") + "(" + parseInt(a.length / 2) + ")");
    var o = $($(e).attr("target") + " tbody tr:first-child");
    $.each(o, function (t, e) {
      var a = $(e).parent().find("[s='0']"),
        i = $(e).parent().find("[s]");
      $(e)
        .find("th:eq(2)")
        .text(
          $(e).attr("t") + " [" + (i.length - a.length) + "/" + i.length + "]"
        );
    });
  });
}
function releaseTrack() {
  (current_id = 0), $(".active").removeClass("active");
}
function cancelDefShowAll() {
  needShowAllAsset = 0;
}
function updateDevice(t, e, a, i) {
  var o = null != t && void 0 !== t && t.length > 0;
  void 0 !== i &&
    1 == i &&
    ($lastselect && ($lastselect = null),
    clearList("tree_all"),
    clearList("tree_online"),
    clearList("tree_offline"),
    clearList("tree_expired"),
    clearArray(Groups),
    clearArray(GroupItem));
  try {
    if (o) {
      clearArray(ChangeItems), (ChangeItems = new Array());
      for (var n = 0; n < t.length; n++) addGroup(t[n], e, a, i);
    }
  } finally {
    o && (a.RefreshClusters(), updateShow());
  }
}
function getOnlineNumber() {
  return $("#tree_online tbody tr[s]").length;
}
function getOfflineNumber() {
  return $("#tree_offline tbody tr[s]").length;
}
function getExpiredNumber() {
  return $("#tree_expired tbody tr[s]").length;
}
function getExpireObjByDays() {
  var t = { ex_30: [], ex_15: [], ex_7: [], ex_1: [], ex_0: [] },
    e = $("#tree_all tbody tr:not(tr:first-child)");
  return (
    $(e).each(function (e, a) {
      if (null != $(a).find("td:eq(2)").attr("ex")) {
        var i =
          (newDate($(a).find("td:eq(2)").attr("ex")).getTime() -
            new Date().getTime()) /
          864e5;
        i <= 0
          ? t.ex_0.push($(a).find("td:eq(2)").attr("c"))
          : i <= 1
          ? t.ex_1.push($(a).find("td:eq(2)").attr("c"))
          : i <= 7
          ? t.ex_7.push($(a).find("td:eq(2)").attr("c"))
          : i <= 15
          ? t.ex_15.push($(a).find("td:eq(2)").attr("c"))
          : i <= 30 && t.ex_30.push($(a).find("td:eq(2)").attr("c"));
      }
    }),
    t
  );
}
function getAlarmCarNumber() {
  var t = 0,
    e = $("#tree_all tbody tr:not(tr:first-child)");
  return (
    $(e).each(function (e, a) {
      $(a).find("td:eq(4)").attr("a") > 0 && t++;
    }),
    t
  );
}
function getAllAlarm() {
  var t = 0,
    e = $("#tree_all tbody tr:not(tr:first-child)");
  return (
    $(e).each(function (e, a) {
      var i = $(a).find("td:eq(6)").attr("a");
      void 0 !== i && null != i && (t += parseInt(i));
    }),
    t
  );
}
function getAllNumber() {
  return $("#tree_all tbody tr[s]").length;
}
function getShowObjs() {
  var t = [],
    e = $("#tree_all tbody tr:not(tr:first-child)");
  return (
    $(e).each(function (e, a) {
      $(a).find("td:eq(0) input").is(":checked") && t.push($(a).attr("n"));
    }),
    t
  );
}
function getMovingStopCarNumber() {
  var t = [],
    e = 0,
    a = 0,
    i = 0,
    o = { s_0_40: [], s_40_80: [], s_80_90: [], s_90_120: [], s_120: [] },
    n = $("#tree_online tbody tr:not(tr:first-child)");
  return (
    $(n).each(function (t, n) {
      var r = $(n).attr("sval");
      r > 0 ? e++ : a++,
        30 == $(n).attr("s") && i++,
        r >= 0 && r <= 40
          ? o.s_0_40.push($(n).find("td:eq(2)").attr("c"))
          : r > 40 && r <= 80
          ? o.s_40_80.push($(n).find("td:eq(2)").attr("c"))
          : r > 80 && r <= 90
          ? o.s_80_90.push($(n).find("td:eq(2)").attr("c"))
          : r > 90 && r <= 120
          ? o.s_90_120.push($(n).find("td:eq(2)").attr("c"))
          : r > 120 && o.s_120.push($(n).find("td:eq(2)").attr("c"));
    }),
    t.push(e),
    t.push(a),
    t.push(o),
    t.push(i),
    t
  );
}
function getTopMileageEngine() {
  var t = [],
    e = [],
    a = $("#tree_all tbody tr:not(tr:first-child)");
  return (
    $(a).each(function (e, a) {
      var i = $(a).find("td:eq(2)").attr("io"),
        o = $(a).find("td:eq(2)").attr("zt"),
        n = $(a).find("td:eq(2)").attr("c"),
        r = $(a).attr("sval"),
        s = getIdValue("3F:", i),
        l = getIdValue("3E:", i),
        d = getIdValue("40:", i),
        p = getIdValue("3D:", i);
      null == s && (s = 0),
        (s = parseInt(mileageUnitConversion(s, JS_UNIT_DISTANCE))),
        "-1" != r &&
          null != o &&
          new Date().getTime() - newDate(o).getTime() < 864e5 &&
          t.push({
            c: n,
            m: null == s ? 0 : s,
            e: null == l ? 0 : parseFloat(l) / 3600,
            i: null == d ? 0 : parseFloat(d) / 3600,
            o: null == p ? 0 : parseFloat(p) / 3600,
          });
    }),
    e.push(t.sort(sortMileage).slice(0, 10)),
    e.push(t.sort(sortEngine).slice(0, 10)),
    e.push(t.sort(sortIdle).slice(0, 10)),
    e.push(t.sort(sortMoving).slice(0, 10)),
    e
  );
}
function sortMileage(t, e) {
  var a = t.m,
    i = e.m;
  return (
    isNaN(Number(a)) || isNaN(Number(i)) || ((a = Number(a)), (i = Number(i))),
    i - a
  );
}
function sortEngine(t, e) {
  var a = t.e,
    i = e.e;
  return (
    isNaN(Number(a)) || isNaN(Number(i)) || ((a = Number(a)), (i = Number(i))),
    i - a
  );
}
function sortIdle(t, e) {
  var a = t.i,
    i = e.i;
  return (
    isNaN(Number(a)) || isNaN(Number(i)) || ((a = Number(a)), (i = Number(i))),
    i - a
  );
}
function sortMoving(t, e) {
  var a = t.o,
    i = e.o;
  return (
    isNaN(Number(a)) || isNaN(Number(i)) || ((a = Number(a)), (i = Number(i))),
    i - a
  );
}
function getAllAlarm() {
  var t = 0,
    e = $("#tree_all tbody tr:not(tr:first-child)");
  return (
    $(e).each(function (e, a) {
      var i = $(a).find("td:eq(6)").attr("a");
      t += parseInt(i);
    }),
    t
  );
}
function createSpeedometer(t, e) {
  var a = document.getElementById(t),
    i = new Donut(a).setOptions({
      angle: 0.35,
      lineWidth: 0.1,
      radiusScale: 1,
      pointer: { length: 0.6, strokeWidth: 0.035, color: "#2B82D4" },
      limitMax: !1,
      limitMin: !1,
      colorStart: "#2B82D4",
      colorStop: "#2B82D4",
      strokeColor: "#C4C4C4",
      generateGradient: !0,
      highDpiSupport: !0,
    });
  (i.maxValue = 250), i.setMinValue(0), (i.animationSpeed = 32), i.set(e);
}
function createObjStateBar(t, e, a, i, o, n, r, s, l, d, p, c, h, u) {
  $("#dlg_objstatechart .content").empty();
  var m, _, f, g, v, y;
  Highcharts.chart("sta_on_off_exp", {
    credits: { enabled: !1 },
    exporting: { enabled: !1 },
    chart: { spacing: [0, 0, 0, 0], margin: [5, 5, 5, 5] },
    title: {
      floating: !1,
      text: JS_OBJECTS,
      style: { fontSize: "12px", fontWeight: "bold" },
      align: "left",
      x: "5",
      y: "15",
    },
    tooltip: { pointFormat: "{point.y}" },
    plotOptions: {
      pie: {
        allowPointSelect: !0,
        cursor: "pointer",
        size: 80,
        dataLabels: {
          overflow: "visible",
          enabled: !0,
          align: "left",
          format: "{point.name}: {point.y}",
          distance: 2,
          style: {
            textOverflow: "none",
            fontWeight: "normal",
            fontSize: "7px",
            color:
              (Highcharts.theme && Highcharts.theme.contrastTextColor) ||
              "black",
          },
        },
      },
      connectorPadding: 5,
    },
    series: [
      {
        type: "pie",
        innerSize: "50%",
        data: [
          {
            name: JS_TIP_OBJ_ONLINE,
            x: e,
            y: e,
            color: "#4DA74D",
            sliced: !0,
            selected: !0,
          },
          { name: JS_TIP_OBJ_OFFLINE, x: a, y: a, color: "gray" },
          { name: JS_TIP_OBJ_EXPIRED, x: o, y: o, color: "#EDC240" },
        ],
      },
    ],
  }),
    Highcharts.chart("sta_mov_sti_alm", {
      credits: { text: "", href: "" },
      exporting: { enabled: !1 },
      chart: { spacing: [0, 0, 0, 0], margin: [5, 5, 5, 5] },
      title: {
        floating: !0,
        text: "",
        style: { fontSize: "12px" },
        align: "left",
      },
      tooltip: { pointFormat: "{point.y}" },
      plotOptions: {
        pie: {
          allowPointSelect: !0,
          cursor: "pointer",
          size: 80,
          dataLabels: {
            overflow: "visible",
            enabled: !0,
            align: "left",
            format: "{point.name}: {point.y}",
            distance: 2,
            style: {
              textOverflow: "none",
              fontWeight: "normal",
              fontSize: "7px",
              color:
                (Highcharts.theme && Highcharts.theme.contrastTextColor) ||
                "black",
            },
          },
        },
        connectorPadding: 5,
      },
      series: [
        {
          type: "pie",
          innerSize: "50%",
          data: [
            {
              name: JS_MOVING,
              x: n,
              y: n,
              color: "#2CA089",
              sliced: !0,
              selected: !0,
            },
            { name: JS_STATIC, x: r, y: r, color: "#73D300" },
            { name: JS_IDLE, x: l, y: l, color: "#FF7F2A" },
            { name: JS_TIP_OBJ_ALARM, x: i, y: i, color: "#CB4B4B" },
          ],
        },
      ],
    });
  (m = Highcharts).wrap(m.Tooltip.prototype, "getLabel", function (t) {
    var e = t.apply(this, Array.prototype.slice.call(arguments, 1));
    return this.container && m.css(this.container, { zIndex: 9999 }), e;
  }),
    u.ex_0.length <= 30 ? (_ = u.ex_0) : (_ = u.ex_0.slice(0, 30)).push("..."),
    u.ex_1.length <= 30 ? (f = u.ex_1) : (f = u.ex_1.slice(0, 30)).push("..."),
    u.ex_7.length <= 30 ? (g = u.ex_7) : (g = u.ex_7.slice(0, 30)).push("..."),
    u.ex_15.length <= 30
      ? (v = u.ex_15)
      : (v = u.ex_15.slice(0, 30)).push("..."),
    u.ex_30.length <= 30
      ? (y = u.ex_30)
      : (y = u.ex_30.slice(0, 30)).push("...");
  var x,
    T,
    S,
    b,
    I,
    E = [_, f, g, v, y];
  Highcharts.chart("sta_exp_time", {
    credits: { text: "", href: "" },
    exporting: { enabled: !1 },
    chart: { spacing: [0, 0, 0, 0], margin: [5, 5, 5, 5] },
    title: {
      floating: !0,
      text: "",
      style: { fontSize: "12px" },
      align: "left",
    },
    tooltip: {
      outside: !0,
      pointFormatter: function () {
        var t = "";
        return (
          Highcharts.each(E[this.series.data.indexOf(this)], function (e) {
            t += '<a href = "">' + e + "</a><br>";
          }),
          "<br>" + t + "<br />"
        );
      },
    },
    plotOptions: {
      pie: {
        allowPointSelect: !0,
        cursor: "pointer",
        size: 80,
        dataLabels: {
          overflow: "visible",
          enabled: !0,
          align: "left",
          format: "{point.name}: {point.y}",
          distance: 2,
          style: {
            textOverflow: "none",
            fontWeight: "normal",
            fontSize: "7px",
            color:
              (Highcharts.theme && Highcharts.theme.contrastTextColor) ||
              "black",
          },
        },
      },
      connectorPadding: 5,
    },
    series: [
      {
        type: "pie",
        innerSize: "50%",
        data: [
          {
            name: JS_EXPIRE_0,
            x: u.ex_0.length,
            y: u.ex_0.length,
            color: "#DC143C",
            sliced: !0,
            selected: !0,
          },
          {
            name: JS_EXPIRE_1,
            x: u.ex_1.length,
            y: u.ex_1.length,
            color: "#FF00FF",
          },
          {
            name: JS_EXPIRE_7,
            x: u.ex_7.length,
            y: u.ex_7.length,
            color: "#C71585",
          },
          {
            name: JS_EXPIRE_15,
            x: u.ex_15.length,
            y: u.ex_15.length,
            color: "#FFD700",
          },
          {
            name: JS_EXPIRE_30,
            x: u.ex_30.length,
            y: u.ex_30.length,
            color: "#00FF99",
          },
        ],
      },
    ],
  });
  s.s_0_40.length <= 30
    ? (x = s.s_0_40)
    : (x = s.s_0_40.slice(0, 30)).push("..."),
    s.s_40_80.length <= 30
      ? (T = s.s_40_80)
      : (T = s.s_40_80.slice(0, 30)).push("..."),
    s.s_80_90.length <= 30
      ? (S = s.s_80_90)
      : (S = s.s_80_90.slice(0, 30)).push("..."),
    s.s_90_120.length <= 30
      ? (b = s.s_90_120)
      : (b = s.s_90_120.slice(0, 30)).push("..."),
    s.s_120.length <= 30
      ? (I = s.s_120)
      : (I = s.s_120.slice(0, 30)).push("...");
  var w = [x, T, S, b, I],
    C =
      (Highcharts.chart("sta_speed_range", {
        credits: { text: "", href: "" },
        exporting: { enabled: !1 },
        chart: { spacing: [0, 0, 0, 0], margin: [5, 5, 5, 5] },
        title: {
          floating: !0,
          text: "",
          style: { fontSize: "12px" },
          align: "left",
        },
        tooltip: {
          outside: !0,
          pointFormatter: function () {
            var t = "";
            return (
              Highcharts.each(w[this.series.data.indexOf(this)], function (e) {
                t += '<a href = "">' + e + "</a><br>";
              }),
              "<br>" + t + "<br />"
            );
          },
        },
        plotOptions: {
          pie: {
            allowPointSelect: !0,
            cursor: "pointer",
            size: 80,
            dataLabels: {
              overflow: "visible",
              enabled: !0,
              align: "left",
              format: "{point.name}: {point.y}",
              distance: 2,
              style: {
                textOverflow: "none",
                fontWeight: "normal",
                fontSize: "7px",
                color:
                  (Highcharts.theme && Highcharts.theme.contrastTextColor) ||
                  "black",
              },
            },
          },
          connectorPadding: 5,
        },
        series: [
          {
            type: "pie",
            innerSize: "50%",
            data: [
              {
                name: JS_SPEED_0_40,
                x: s.s_0_40.length,
                y: s.s_0_40.length,
                color: "#5DFEFE",
                sliced: !0,
                selected: !0,
              },
              {
                name: JS_SPEED_40_80,
                x: s.s_40_80.length,
                y: s.s_40_80.length,
                color: "#0096FE",
              },
              {
                name: JS_SPEED_80_90,
                x: s.s_80_90.length,
                y: s.s_80_90.length,
                color: "#3200FF",
              },
              {
                name: JS_SPEED_90_120,
                x: s.s_90_120.length,
                y: s.s_90_120.length,
                color: "#9A009C",
              },
              {
                name: JS_SPEED_120,
                x: s.s_120.length,
                y: s.s_120.length,
                color: "#FF002A",
              },
            ],
          },
        ],
      }),
      [
        "#8E468E",
        "#D64646",
        "#008E8E",
        "#FF8E46",
        "#8BBA00",
        "#AFD8F8",
        "#F6BD0F",
        "#B6BD0F",
        "#4CCA00",
        "#1CBA00",
      ]),
    A = [],
    k = [],
    N = [],
    O = [],
    D = [],
    J = [],
    L = [],
    F = [];
  for (j = 0; j < d.length; j++)
    if (d[j].m > 0.1) {
      var M = { color: C[j], y: d[j].m };
      A.push(d[j].c), k.push(M);
    }
  for (j = 0; j < p.length; j++)
    if (p[j].e > 0.1) {
      M = { color: C[j], y: p[j].e };
      N.push(p[j].c), O.push(M);
    }
  for (j = 0; j < c.length; j++)
    if (c[j].i > 0.1) {
      M = { color: C[j], y: c[j].i };
      D.push(c[j].c), J.push(M);
    }
  for (j = 0; j < h.length; j++)
    if (h[j].o > 0.1) {
      M = { color: C[j], y: h[j].o };
      L.push(h[j].c), F.push(M);
    }
  Highcharts.chart("sta_last24h_mileage", {
    credits: { text: "", href: "" },
    exporting: { enabled: !1 },
    chart: { type: "column" },
    title: {
      text: JS_LAST24H_MILEAGE,
      style: { fontSize: "12px", fontWeight: "bold" },
      align: "left",
    },
    subtitle: { text: "", style: { display: "none" } },
    xAxis: { categories: A, title: { text: null } },
    yAxis: { min: 0, title: { text: JS_MILEAGE + "(" + UNIT_DIST + ")" } },
    legend: { enabled: !1 },
    tooltip: { pointFormat: "{point.y:.1f}(" + UNIT_DIST + ")" },
    series: [{ data: k }],
  }),
    Highcharts.chart("sta_last24h_engine", {
      credits: { text: "", href: "" },
      exporting: { enabled: !1 },
      chart: { type: "column" },
      title: {
        text: JS_LAST24H_ENGINE,
        style: { fontSize: "12px", fontWeight: "bold" },
        align: "left",
      },
      subtitle: { text: "", style: { display: "none" } },
      xAxis: { categories: N, title: { text: null } },
      yAxis: { min: 0, title: { text: JS_HOUR + "(h)" } },
      legend: { enabled: !1 },
      tooltip: { pointFormat: "{point.y:.1f}(h)" },
      series: [{ data: O }],
    }),
    Highcharts.chart("sta_last24h_idle", {
      credits: { text: "", href: "" },
      exporting: { enabled: !1 },
      chart: { type: "column" },
      title: {
        text: JS_LAST24H_IDLE,
        style: { fontSize: "12px", fontWeight: "bold" },
        align: "left",
      },
      subtitle: { text: "", style: { display: "none" } },
      xAxis: { categories: D, title: { text: null } },
      yAxis: { min: 0, title: { text: JS_HOUR + "(h)" } },
      legend: { enabled: !1 },
      tooltip: { pointFormat: "{point.y:.1f}(h)" },
      series: [{ data: J }],
    }),
    Highcharts.chart("sta_last24h_moving", {
      credits: { text: "", href: "" },
      exporting: { enabled: !1 },
      chart: { type: "column" },
      title: {
        text: JS_LAST24H_MOVING,
        style: { fontSize: "12px", fontWeight: "bold" },
        align: "left",
      },
      subtitle: { text: "", style: { display: "none" } },
      xAxis: { categories: L, title: { text: null } },
      yAxis: { min: 0, title: { text: JS_HOUR + "(h)" } },
      legend: { enabled: !1 },
      tooltip: { pointFormat: "{point.y:.1f}(h)" },
      series: [{ data: F }],
    });
}
function createLast5daysMiEgBar(t, e, a, i) {
  var o = [
      "#8E468E",
      "#D64646",
      "#008E8E",
      "#FF8E46",
      "#8BBA00",
      "#AFD8F8",
      "#F6BD0F",
      "#B6BD0F",
      "#4CCA00",
      "#1CBA00",
    ],
    n = [
      "#EFC342",
      "#ADDBFF",
      "#CE494A",
      "#4AA64A",
      "#9441EF",
      "#AFD8F8",
      "#F6BD0F",
      "#B6BD0F",
      "#4CCA00",
      "#1CBA00",
    ],
    r = [],
    s = [],
    l = [],
    d = [],
    p = [],
    c = [],
    h = objLastMiEg[t];
  if (null != h) {
    for (j = 0; j < h.length; j++) {
      var u = { color: o[j], y: h[j].MILEAGE / 1e3 };
      r.push(h[j].COLLECT_DATE.split("-")[2]), s.push(u);
    }
    for (j = 0; j < h.length; j++) {
      u = { color: n[j], y: h[j].DRIVING_TIME / 3600 };
      l.push(h[j].COLLECT_DATE.split("-")[2]), d.push(u);
    }
    for (j = 0; j < h.length; j++) {
      u = { color: n[j], y: h[j].LOAD_TIME / 3600 };
      p.push(h[j].COLLECT_DATE.split("-")[2]), c.push(u);
    }
    Highcharts.chart("last5day_mil", {
      credits: { text: "", href: "" },
      exporting: { enabled: !1 },
      chart: {
        type: "column",
        spacingTop: 5,
        spacingRight: 0,
        spacingBottom: 0,
        spacingLeft: 0,
        plotBorderWidth: 0,
      },
      title: {
        text: JS_RECENT_MILEAGE + "(" + UNIT_DIST + ")",
        style: { fontSize: "12px", fontWeight: "bold" },
        align: "left",
      },
      subtitle: { text: "", style: { display: "none" } },
      plotOptions: { series: { animation: !1 } },
      xAxis: { categories: r, title: { text: null } },
      yAxis: { min: 0, title: { text: null } },
      legend: { enabled: !1 },
      tooltip: { pointFormat: "{point.y:.1f}(" + UNIT_DIST + ")" },
      series: [{ data: s }],
    }),
      Highcharts.chart("last5day_eng", {
        credits: { text: "", href: "" },
        exporting: { enabled: !1 },
        chart: {
          type: "column",
          spacingTop: 5,
          spacingRight: 0,
          spacingBottom: 0,
          spacingLeft: 0,
          plotBorderWidth: 0,
        },
        title: {
          text: JS_RECENT_ENGINE + "(h)",
          style: { fontSize: "12px", fontWeight: "bold" },
          align: "left",
        },
        subtitle: { text: "", style: { display: "none" } },
        xAxis: { categories: l, title: { text: null } },
        plotOptions: { series: { animation: !1 } },
        yAxis: { min: 0, title: { text: null } },
        legend: { enabled: !1 },
        tooltip: { pointFormat: "{point.y:.1f}(h)" },
        series: [{ data: d }],
      }),
      Highcharts.chart("last5day_load", {
        credits: { text: "", href: "" },
        exporting: { enabled: !1 },
        chart: {
          type: "column",
          spacingTop: 5,
          spacingRight: 0,
          spacingBottom: 0,
          spacingLeft: 0,
          plotBorderWidth: 0,
        },
        title: {
          text: JS_RECENT_LOAD + "(h)",
          style: { fontSize: "12px", fontWeight: "bold" },
          align: "left",
        },
        subtitle: { text: "", style: { display: "none" } },
        xAxis: { categories: p, title: { text: null } },
        plotOptions: { series: { animation: !1 } },
        yAxis: { min: 0, title: { text: null } },
        legend: { enabled: !1 },
        tooltip: { pointFormat: "{point.y:.1f}(h)" },
        series: [{ data: c }],
      });
  }
}
function createTiresensorBar(t, e, a, i) {
  Highcharts.chart("last5day_tire", {
    chart: { zoomType: "xy" },
    credits: { text: "", href: "" },
    exporting: { enabled: !1 },
    chart: {
      type: "column",
      spacingTop: 5,
      spacingRight: 0,
      spacingBottom: 0,
      spacingLeft: 0,
      plotBorderWidth: 0,
    },
    title: {
      text: JS_RECENT_TIRESENSOR,
      style: { fontSize: "12px", fontWeight: "bold" },
      align: "left",
    },
    subtitle: { text: "", style: { display: "none" } },
    xAxis: [{ categories: t, crosshair: !0 }],
    yAxis: [
      {
        gridLineWidth: 0,
        title: {
          text: JS_TIRE_PRESSURE,
          style: { color: "#5D8AA8", fontSize: "8px" },
        },
        labels: {
          format: "{value} " + UNIT_TPMS,
          style: { color: "#5D8AA8", fontSize: "8px" },
        },
      },
      {
        labels: {
          format: "{value}" + UNIT_TEMP,
          style: { color: "#FA8523", fontSize: "8px" },
        },
        title: { text: JS_TEMP, style: { color: "#FA8523", fontSize: "8px" } },
        opposite: !0,
      },
    ],
    tooltip: { shared: !0 },
    legend: { enabled: !1 },
    series: [
      {
        name: JS_TIRE_PRESSURE,
        type: "spline",
        data: e,
        tooltip: { valueSuffix: " " + UNIT_TPMS },
        color: "#5D8AA8",
      },
      {
        name: JS_TEMP,
        type: "spline",
        yAxis: 1,
        data: a,
        tooltip: { valueSuffix: " " + UNIT_TEMP },
        color: "#FA8523",
      },
    ],
  });
}
