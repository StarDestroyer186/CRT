function MapOperat(e, i, t, s, a) {
  (this.markers = []),
    (this.zoneMarkers = []),
    (this.drivers = []),
    (this.drivers4jb = []),
    (this.extbar = s),
    (this.mylocation = t),
    (this.history = a),
    (this.historyid = 0);
  var n = document.getElementById(e);
  this.map_obj = new MapClassImpl(n, i, t, s, a, this.drivers4jb);
}
MapOperat.prototype = {
  SetHistoryId: function (e) {
    this.historyid = e;
  },
  SetHistoryMode: function (e) {
    this.map_obj.SetHistoryMode(e);
  },
  ActiveTaskPathTool: function (e, i, t) {
    this.map_obj.ActiveTaskPathTool(e, i, t);
  },
  ActiveMeasureTool: function (e) {
    this.map_obj.ActiveMeasureTool(e);
  },
  ActiveRulerTool: function (e) {
    this.map_obj.ActiveRulerTool(e);
  },
  AddEvent: function (e, i) {
    this.map_obj.AddEvent(e, i);
  },
  Free: function () {
    this.map_obj.Free(), (this.map_obj = null), (this.markers = null);
  },
  Center: function (e, i, t) {
    try {
      this.map_obj.Center(e, i, t);
    } catch (e) {}
  },
  Zoom: function (e) {
    try {
      this.map_obj.Zoom(e);
    } catch (e) {}
  },
  GetMap: function () {
    return this.map_obj.GetMap();
  },
  GeoNames: function (e, i, t, s, a, n) {
    try {
      this.map_obj.GeoNames(e, i, t, s, a, n);
    } catch (e) {}
  },
  ClosePopup: function () {
    this.map_obj.ClosePopup();
  },
  GetIdValue: function (e, i) {
    if (null == e || e.length < 1 || null == i || i.length < 1) return null;
    for (var t = i.split(","), s = 0; s < t.length; s++) {
      var a = t[s].split(":");
      if (0 == t[s].indexOf(e) && 2 == a.length)
        return 0 == a[1].length ? null : a[1];
    }
    return null;
  },
  MoveTop: function (e) {
    this.map_obj.MoveTop(e);
  },
  DrawIcon: function (
    e,
    i,
    t,
    s,
    a,
    n,
    o,
    r,
    l,
    p,
    c,
    h,
    u,
    d,
    m,
    b,
    f,
    _,
    g,
    v,
    k,
    j
  ) {
    var M = !1,
      T = !1;
    try {
      var x = window.parent;
      if (
        void 0 !== this.map_obj &&
        null != n &&
        0 != n &&
        null != o &&
        0 != o
      ) {
        var S,
          y,
          I = "--",
          E = "--",
          L = "--",
          C = "--",
          F = "--",
          A = "--",
          G = "--",
          N = "--",
          w = "--",
          D = "--",
          O = "--",
          U = x.JS_NO_DRIVER,
          R =
            "<img src='../img/none driver.png' alt='null' height='89' width='80'>";
        if (null != v && void 0 !== v && v.length > 0) {
          if (
            ((J = this.drivers[e]) ||
              ((J = this.drivers4jb[v]) && (this.drivers[e] = J)),
            J && J.jb == v && J.name == k)
          )
            (R = J.img), (U = k);
          else {
            var J = { jb: v, name: k, img: R };
            (this.drivers[e] = J), (T = !0), (R = J.img), (U = k);
          }
          this.drivers4jb[v] = J;
          var P = this;
          T &&
            $.get("../driver.image.ajax.php", { jb: v }, function (M) {
              "none" != M && ((J.img = M), (P.drivers4jb[v] = J)),
                P.DrawIcon(
                  e,
                  i,
                  t,
                  s,
                  a,
                  n,
                  o,
                  r,
                  l,
                  p,
                  c,
                  h,
                  u,
                  d,
                  m,
                  b,
                  f,
                  _,
                  g,
                  v,
                  k,
                  j
                );
            });
        }
        if (
          (null != f &&
            void 0 !== f &&
            f.length > 0 &&
            (f.indexOf("3005") >= 0
              ? (I = x.JS_ENGINE_ON)
              : f.indexOf("3006") >= 0 && (I = x.JS_ENGINE_OFF)),
          null != _ && void 0 !== _ && _.length > 0)
        ) {
          var H = this.GetIdValue("15:", _);
          null != H && (N = parseFloat(H)),
            null != (H = this.GetIdValue("14:", _)) && (w = parseFloat(H)),
            null != (H = this.GetIdValue("1C:", _)) && (D = parseFloat(H)),
            null != (H = this.GetIdValue("1E:", _)) &&
              (E = (H = fuelUnitConversion(H, x.JS_UNIT_FUEL)).toFixed(0)),
            null != (H = this.GetIdValue("1F:", _)) &&
              (L = (H = fuelUnitConversion(H, x.JS_UNIT_FUEL)).toFixed(0)),
            (S = (E + "," + L + x.UNIT_FUEL)
              .replace("--,", "")
              .replace(",--", "")),
            null != (H = this.GetIdValue("A:", _)) &&
              (O =
                (H = mileageUnitConversion(H, x.JS_UNIT_DISTANCE)) +
                "&nbsp;" +
                x.UNIT_DIST),
            null != (H = this.GetIdValue("48:", _)) &&
              (C = (C = tempUnitConversion(H, x.JS_UNIT_TEMPERATURE)).toFixed(
                1
              )),
            null != (H = this.GetIdValue("49:", _)) &&
              (F = (F = tempUnitConversion(H, x.JS_UNIT_TEMPERATURE)).toFixed(
                1
              )),
            (y = (C + "," + F + x.UNIT_TEMP)
              .replace("--,", "")
              .replace(",--", ""));
          var V = x.getStatusById(e),
            B = x.getElementIndex("1", _);
          A = x.getStatusByIndex(B, V);
          var z = x.getElementIndex("63", _);
          G = x.getStatusByIndex(z, V);
        }
        var q = "<div class='infowindow'><h3>" + i + "</h3>",
          K = "sta_speedometer_" + e;
        (1 != this.extbar && this.historyid == e) ||
          (q +=
            "<div class='infodriver'><ul><li id='idrvdef_" +
            e +
            "'>" +
            R +
            "</li><li class='ndrvdef' id='ndrvdef_" +
            e +
            "'>" +
            U +
            "</li><li><canvas id='" +
            K +
            "' style='max-width: 100px; max-height: 50px; margin-left: -10px; margin-top: -5px; margin-right: 0px; margin-bottom: -35px;'></canvas><label style='margin-left:4px; margin-top:-62px;'><span>" +
            b +
            UNIT_SPEED +
            "</span></label></li></ul></div>");
        var Z = null,
          W = this.GetIdValue("7:", _),
          Y = this.GetIdValue("8:", _);
        null != W && (Z = b + x.UNIT_SPEED + " (" + second2time(W) + ")"),
          null != Y && (Z = b + x.UNIT_SPEED + " (" + second2time(Y) + ")"),
          null == Z && (Z = u),
          (q += "<div class='infobase'><ul>"),
          (q +=
            b > 0 || null != W
              ? "<li class='infospeed' style='padding-left: 18px; background: url(../img/move.svg) no-repeat 0px; background-size : 18px 18px;'> <span>&nbsp;&nbsp;" +
                Z +
                "</span></li>"
              : "<li class='infospeed' style='padding-left: 18px; background: url(../img/parked.svg) no-repeat 0px; background-size : 19px 19px;'> <span>&nbsp;&nbsp;" +
                Z +
                "</span></li>"),
          1 == this.extbar && this.historyid != e
            ? ((q +=
                "<li class='infoltime'> <span>&nbsp;&nbsp;" +
                c +
                "</span></li><li class='odometer'> <span>&nbsp;&nbsp;" +
                O +
                "</span></li><li><span class='infogps'>" +
                w +
                "</span>&nbsp;&nbsp;<span class='infogsm'>" +
                N +
                "</span>&nbsp;&nbsp;<span class='infopassenger'>" +
                D +
                "</span></li><li class='infolocal'> <span>&nbsp;&nbsp;<a style ='color: #4D8ED9; text-decoration: none;' target='_blank' href=" +
                JS_GOOGLE_MAP_BASE_LINK +
                "/maps?hl=en&q=" +
                (o / 1e6).toFixed(5) +
                "," +
                (n / 1e6).toFixed(5) +
                ">" +
                (o / 1e6).toFixed(5) +
                " &#176;," +
                (n / 1e6).toFixed(5) +
                " &#176;</a></span></li><li class='infoaddress' id='infoaddress_" +
                e +
                "'></li><li><a href='#' class='button history' onfocus='this.blur();' title='" +
                x.JS_HISTORY +
                "' onClick='menuselect(7,\"" +
                e +
                "\");'></a><a href='#' class='button objinfo' onfocus='this.blur();' title='" +
                x.JS_CMD_OBJINFO +
                "' onClick='menuselect(1,\"" +
                e +
                "\");'></a><a href='#' class='button sendcmd' onfocus='this.blur();' title='" +
                x.JS_CMD_SENDCMD +
                "' onClick='menuselect(2,\"" +
                e +
                '",' +
                g +
                ");'></a>"),
              (q +=
                "<a href='#' class='button lastpic' onfocus='this.blur();' title='" +
                x.JS_LAST_PHOTO +
                "' onClick='menuselect(4,\"" +
                e +
                "\");'></a>"),
              (q +=
                "<a href='#' class='button lastvoice' onfocus='this.blur();' title='" +
                x.JS_LAST_VOICE +
                "' onClick='menuselect(5,\"" +
                e +
                "\");'></a>"),
              (q +=
                "<a href='#' class='button shareposition' onfocus='this.blur();' title='" +
                x.JS_SHARE_POSITION +
                "' onClick='menuselect(6,\"" +
                e +
                '",-1,' +
                o +
                "," +
                n +
                ',"' +
                c +
                "\");'></a>"),
              d > 0 &&
                (q +=
                  "<a href='#' class='button altifno' onfocus='this.blur();' title='" +
                  x.JS_CMD_ALTINFO +
                  "' onClick='menuselect(3,\"" +
                  e +
                  "\");'></a>"),
              (q += "</li>"),
              (q += "<li>"),
              (q +=
                "<a href='#' class='button opengmap' onfocus='this.blur();' onClick='mapsSelector(" +
                (o / 1e6).toFixed(5) +
                "," +
                (n / 1e6).toFixed(5) +
                ")'></a>"),
              (q +=
                "<a href='#' class='button openwmap' onfocus='this.blur();' onClick='openWaze(" +
                (o / 1e6).toFixed(5) +
                "," +
                (n / 1e6).toFixed(5) +
                ")'></a>"),
              (q += "</li>"),
              (q += "</ul></div>"))
            : ((q +=
                "<li class='infoltime'> <span>&nbsp;&nbsp;" +
                c +
                "</span></li><li class='odometer'> <span>&nbsp;&nbsp;" +
                O +
                "</span></li><li> <span class='infogps'>" +
                w +
                "</span>&nbsp;&nbsp;<span class='infogsm'>" +
                N +
                "</span>&nbsp;&nbsp;<span class='infopassenger'>" +
                D +
                "</span></li><li class='infolocal'> <span>&nbsp;&nbsp;<a style ='color: #4D8ED9; text-decoration: none;' target='_blank' href=" +
                JS_GOOGLE_MAP_BASE_LINK +
                "/maps?hl=en&q=" +
                (o / 1e6).toFixed(5) +
                "," +
                (n / 1e6).toFixed(5) +
                ">" +
                (o / 1e6).toFixed(5) +
                " &#176;," +
                (n / 1e6).toFixed(5) +
                " &#176;</a></span></li>"),
              (q += "</ul></div>")),
          (1 != this.extbar && this.historyid == e) ||
            ((q += "<div class='infobottom'><ul>"),
            null != f && void 0 !== f && f.length > 0
              ? f.indexOf("3005") >= 0
                ? (q +=
                    "<li class='infoacc' style='padding-left: 18px; background: url(../img/engine_on.svg) no-repeat 0px; background-size : 18px 18px;'> <span>&nbsp;" +
                    I +
                    "</span></li>")
                : f.indexOf("3006") >= 0
                ? (q +=
                    "<li class='infoacc' style='padding-left: 18px; background: url(../img/engine_off.svg) no-repeat 0px; background-size : 18px 18px;'> <span>&nbsp;" +
                    I +
                    "</span></li>")
                : (q +=
                    "<li class='infoacc'> <span>&nbsp;" + I + "</span></li>")
              : (q += "<li class='infoacc'> <span>&nbsp;" + I + "</span></li>"),
            (q +=
              "<li class='infofuel'> <span>&nbsp;" +
              S +
              "</span></li><li class='infotemp'> <span>&nbsp;" +
              y +
              "</span></li><li class='infovolt'> <span>&nbsp;" +
              A +
              "</span></li><li class='infoweight'> <span>&nbsp;" +
              G +
              "</span></li></ul></div>")),
          (q += "</div>");
        var Q = this.markers[e];
        Q
          ? this.map_obj.UpdateMarker(
              Q,
              i,
              t,
              s,
              n,
              o,
              r,
              l,
              p,
              q,
              m,
              b,
              c,
              h,
              f,
              _,
              g,
              v,
              k,
              j
            )
          : ((Q = this.map_obj.NewMarker(
              e,
              i,
              t,
              s,
              n,
              o,
              r,
              l,
              p,
              q,
              m,
              this.extbar,
              b,
              c,
              h,
              f,
              _,
              g,
              v,
              k
            )),
            (this.markers[e] = Q),
            (M = !0));
      }
      (q = null), (x = null);
    } catch (e) {}
    return M;
  },
  DrawTrackLine: function (e, i, t, s, a, n, o, r, l, p, c) {
    try {
      this.map_obj.DrawTrackLine(e, i, t, s, a, n, o, r, l, p, c);
    } catch (e) {}
  },
  ShowHideMovesLine: function (e, i, t, s) {
    try {
      this.map_obj.ShowHideMovesLine(e, i, t, s);
    } catch (e) {}
  },
  ShowHideTrackLine: function (e, i) {
    try {
      this.map_obj.ShowHideTrackLine(e, i);
    } catch (e) {}
  },
  ShowHideAveragePoint: function (e) {
    try {
      this.map_obj.ShowHideAveragePoint(e);
    } catch (e) {}
  },
  GetMarker: function (e) {
    return this.markers[e];
  },
  AddTrackPoint: function (e, i, t, s, a, n, o, r) {
    try {
      this.map_obj.AddTrackPoint(e, i, t, s, a, n, o, r);
    } catch (e) {}
  },
  GetAndRemoveMarker: function (e) {
    var i = this.markers[e];
    this.RemoveMarker(e);
    for (var t = 0; t < this.markers.length; t++)
      if (this.markers[t] == i) {
        this.markers.splice(t, 1);
        break;
      }
    return i;
  },
  AddMarker: function (e, i) {
    this.markers[e] = i;
    try {
      this.map_obj.AddMarker(i);
    } catch (e) {}
  },
  LocateMarker: function (e, i, t, s) {
    var a = this.markers[e];
    return (
      a && void 0 !== this.map_obj && this.map_obj.LocateMarker(a, i, t, s), a
    );
  },
  LocateEventMarker: function (e) {
    var i = this.map_obj.GetEventMarker(e);
    i &&
      void 0 !== this.map_obj &&
      this.map_obj.LocateMarker(i, !0, !1, !1, !0);
  },
  LocateStopMarker: function (e) {
    var i = this.map_obj.GetStopMarker(e);
    i &&
      void 0 !== this.map_obj &&
      this.map_obj.LocateMarker(i, !0, !1, !1, !0);
  },
  LocateStartMarker: function () {
    var e = this.map_obj.GetStartMarker();
    e &&
      void 0 !== this.map_obj &&
      this.map_obj.LocateMarker(e, !0, !1, !1, !0);
  },
  LocateEndMarker: function () {
    var e = this.map_obj.GetEndMarker();
    e &&
      void 0 !== this.map_obj &&
      this.map_obj.LocateMarker(e, !0, !1, !1, !0);
  },
  LinkMarker: function (e) {
    this.markers[e] && this.map_obj;
  },
  RemoveMarker: function (e) {
    this.map_obj.RemoveMarker(this.markers[e]), delete this.markers[e];
  },
  RemoveTrack: function (e) {
    this.map_obj.RemoveTrack(e);
  },
  ClearTrack: function (e) {
    this.map_obj.ClearTrack(e);
  },
  ClearMarkers: function () {
    this.map_obj.ClearMarker(this.markers), (this.markers = []);
  },
  MarkersFitBounds: function () {
    this.map_obj.MarkersFitBounds(this.markers);
  },
  HideShowMarker: function (e, i) {
    if (void 0 !== i) {
      var t = this.markers[i];
      if (t) {
        var s = [];
        (s[i] = t), this.map_obj.HideShowMarker(s, e);
      }
    } else this.map_obj.HideShowMarker(this.markers, e);
  },
  ClustersMarker: function (e) {
    this.map_obj.ClustersMarker(e);
  },
  RefreshClusters: function () {
    this.map_obj.RefreshClusters();
  },
  ToggleMarkerTooltip: function (e) {
    this.map_obj.ToggleMarkerTooltip(this.markers, e);
  },
  ToggleStopLayer: function (e) {
    this.map_obj.ToggleStopLayer(e);
  },
  ToggleEventLayer: function (e) {
    this.map_obj.ToggleEventLayer(e);
  },
  ToggleAngleLayer: function (e) {
    this.map_obj.ToggleAngleLayer(e);
  },
  ToggleTimesLayer: function (e) {
    this.map_obj.ToggleTimesLayer(e);
  },
  ToggleDriver: function (e) {
    this.map_obj.ToggleDriver(this.markers, e);
  },
  ResizeMapContainer: function () {
    this.map_obj.ResizeMapContainer();
  },
  ToggleSnapLayer: function (e) {
    return this.map_obj.ToggleSnapLayer(e);
  },
  DisplayMyLocation: function (e, i) {
    return this.map_obj.DisplayMyLocation(e, i);
  },
  HideMyLocation: function () {
    return this.map_obj.HideMyLocation();
  },
};
