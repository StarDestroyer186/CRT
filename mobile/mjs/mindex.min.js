var map,
  ext,
  once = [],
  current_id = 0,
  timer,
  remain = 20,
  needloc = !1,
  zones = [],
  usermarkers = [],
  geoList = null,
  historymode = !1,
  historyid = 0,
  historyMarkerLast = null,
  zones = [],
  usermarkers = [],
  objLastMiEg = [],
  geoList = null,
  needLoadCommand = !0,
  needUpdatePlace = !1,
  firstpagechange = !1,
  nologin = !1,
  blockMoroccoBorders = !1,
  lastAlarmId = 0,
  requestTimeout = 6e4,
  isRequestTimeout = !1,
  needShowAllAsset = 0,
  UNIT_SPEED,
  UNIT_DIST,
  UNIT_FUEL,
  UNIT_TEMP,
  UNIT_ALTITUDE,
  UNIT_HUMIDITY,
  UNIT_TPMS,
  ANIMATION_TIME = 2e3,
  isShowMyLocation = !1,
  myLocation = { lng: 0, lat: 0, needCenter: !1 },
  selectAssetInfos,
  OffsetH = 87,
  OffsetW = 18,
  typeCmd,
  protocolCmd,
  page_last = "page_map";
function shareToApps(e, t) {
  try {
    navigator.share
      ? window.navigator.share({ title: document.title, text: e })
      : -1 != navigator.platform.indexOf("iPhone") ||
        -1 != navigator.platform.indexOf("iPad") ||
        -1 != navigator.platform.indexOf("iPod")
      ? window.webkit.messageHandlers.shareMsg.postMessage(e)
      : window.AndroidShareHandler.share(e);
  } catch (e) {
    alert(e.message);
  }
}
function initUnits() {
  (UNIT_SPEED = "kph"),
    1 == JS_UNIT_SPEED && (UNIT_SPEED = "mph"),
    (UNIT_DIST = "km"),
    1 == JS_UNIT_DISTANCE
      ? (UNIT_DIST = "mi")
      : 2 == JS_UNIT_DISTANCE && (UNIT_DIST = "nmi"),
    (UNIT_FUEL = "L"),
    1 == JS_UNIT_FUEL && (UNIT_FUEL = "gal"),
    (UNIT_TEMP = "℃"),
    1 == JS_UNIT_TEMPERATURE && (UNIT_TEMP = "℉"),
    (UNIT_ALTITUDE = "m"),
    1 == JS_UNIT_ALTITUDE && (UNIT_ALTITUDE = "ft"),
    (UNIT_HUMIDITY = "%rh"),
    JS_UNIT_HUMIDITY,
    (UNIT_TPMS = "bar"),
    1 == JS_UNIT_TPMS
      ? (UNIT_TPMS = "kpa")
      : 2 == JS_UNIT_TPMS
      ? (UNIT_TPMS = "psi")
      : 3 == JS_UNIT_TPMS && (UNIT_TPMS = "kg/cm2");
}
function getIcons() {
  for (var e = [], t = 1; t <= JS_OBJECT_KIND; t++)
    e.push({ iconFilePath: "../img/icons/icon_" + t + ".svg", iconValue: t });
  return e;
}
function getDeviceListData(start) {
  $.get(
    "../devlist.ajax.php",
    { start: start, userName: $("#user a").text() },
    function (data) {
      if ("" != $.trim(data)) {
        var result = eval("(" + data + ")");
        if (
          (null != result &&
            void 0 !== result &&
            (refresh_list(result),
            updateDevice(result.data, current_id, map, result.first)),
          result.start > -1)
        )
          getDeviceListData(result.start);
        else {
          cancelDefShowAll(),
            $("#selone").bind("click", search_select),
            $("#device").keyup(function (e) {
              "13" == e.keyCode && (search_select(), e.preventDefault());
            });
          try {
            1 == JS_DEFAULT_FIT && map.MarkersFitBounds();
          } catch (e) {}
          $("#loadmapwait").css("display", "none"),
            (timer = setTimeout("relocate()", 1e3));
          var deviceList = getDeviceList();
          $("#oflag")
            .focus(function () {
              $(this).autocomplete("search", $(this).val());
            })
            .autocomplete({
              source: deviceList,
              minLength: deviceList.length < 2e3 ? 0 : 2,
              max: 10,
              scroll: !0,
            }),
            $("#cflag")
              .focus(function () {
                $(this).autocomplete("search", $(this).val());
              })
              .autocomplete({
                source: deviceList,
                minLength: deviceList.length < 2e3 ? 0 : 2,
                max: 10,
                scroll: !0,
                select: function (e, t) {
                  showSendCmd(t.item.value);
                },
              }),
            $.get("../commandinfo.ajax.php", function (data) {
              if ("" != $.trim(data)) {
                var result = eval("(" + data + ")");
                null != result &&
                  void 0 !== result &&
                  ((typeCmd = result.tcmd), (protocolCmd = result.pparam));
              }
            }),
            3 == JS_DEFAULT_PAGE && showObjChart();
        }
      }
    }
  );
}
function refresh_list(e) {
  var t = void 0 === map;
  if (
    (!t && e.first && map.ClearMarkers(),
    e.first &&
      (clearArray(JS_DEVICE_ID4FLAG),
      clearArray(JS_DEVICE_FLAG4ID),
      clearArray(JS_DEVICE_STATUS),
      clearArray(JS_DEVICE_TYPE4ID),
      clearArray(JS_DEVICE_SIM4ID),
      clearArray(JS_DEVICE_NO4ID),
      clearArray(JSDEVICE_DRIVER4ID),
      clearArray(JS_DEVICE_ID4GROUPID),
      clearArray(JS_GROUP)),
    void 0 !== e.data && null != e.data)
  )
    for (var a = 0; a < e.data.length; a++)
      for (var o = 0; o < e.data[a].item.length; o++) {
        var s = e.data[a].item[o];
        if (
          ((JS_DEVICE_ID4FLAG[s.c] = s.n),
          (JS_DEVICE_FLAG4ID[s.n] = s.c),
          (JS_DEVICE_STATUS[s.n] = s.e),
          (JS_DEVICE_TYPE4ID[s.n] = s.dt),
          (JS_DEVICE_SIM4ID[s.n] = s.si),
          (JS_DEVICE_NO4ID[s.n] = s.nc),
          (JS_DEVICE_ID4GROUPID[s.n] = e.data[a].gid),
          null != s.dn && s.dn.length > 0 && (JSDEVICE_DRIVER4ID[s.n] = s.dn),
          t)
        ) {
          var i = getSpeedState(s.on, s.v, s.s, s.t, s.a, s.ar, s.io),
            l = {
              n: s.n,
              c: s.c,
              v: s.v,
              x: s.x,
              y: s.y,
              t: $.format.date(s.t, JS_DEFAULT_DATETIME_fmt_JS),
              ts: $.format.date(s.ts, JS_DEFAULT_DATETIME_fmt_JS),
              i: s.i,
              d: s.d,
              a: s.a,
              sta: i.sta,
              spd: i.spd,
              st: s.st,
              io: s.io,
              dt: s.dt,
              s: i.val,
              jb: s.jb,
              dn: s.dn,
            };
          once.push(l);
        }
      }
  if (void 0 !== e.deleteo && null != e.deleteo)
    for (a = 0; a < e.deleteo.length; a++) {
      var n = e.deleteo[a],
        r = JS_DEVICE_ID4GROUPID[n];
      deleteObject(r, n);
    }
  if (void 0 !== e.deleteg && null != e.deleteg)
    for (a = 0; a < e.deleteg.length; a++) {
      r = e.deleteg[a];
      deleteGroup(r);
    }
  if (null != e.start && -1 == e.start) {
    var p = getDeviceList();
    $("#device")
      .autocomplete({
        source: p,
        minLength: p.length < 2e3 ? 0 : 2,
        max: 10,
        scroll: !0,
      })
      .focus(function () {
        $(this).autocomplete("search", $(this).val());
      });
  }
}
function menuselect(e, t, a, o, s, i) {
  var l = getFlagById(t);
  switch (e) {
    case 1:
      showPage("page_objects"), dlgDeviceInfo(t);
      break;
    case 2:
      showPage("page_cmd"), $("#cflag").val(l), showSendCmd($("#cflag").val());
      break;
    case 3:
      showPage("page_events");
      break;
    case 4:
      showLastPhoto(t);
      break;
    case 5:
      showLastVoice(t);
      break;
    case 6:
      var n = $("<label></label>");
      map.GeoNames(s, o, n, "text", 0, !1);
      var r = OBJECT_INFO_FLAG + ": " + l + "\n";
      (r += JS_GPS_TIME + ": " + i + "\n"),
        (r += JS_ADDRESS + ": " + n.text() + "\n"),
        shareToApps(
          (r +=
            JS_POSITION +
            ": " +
            JS_GOOGLE_MAP_BASE_LINK +
            "/maps?hl=en&q=" +
            (o / 1e6).toFixed(5) +
            "," +
            (s / 1e6).toFixed(5)),
          t
        );
      break;
    case 7:
      $("#oflag").val(l), showPage("page_history");
  }
}
function map_locate(e, t, a, o, s) {
  try {
    var i = getFlagById(e),
      l = $("#geo #dev_flag");
    if ((l.text() != i && l.text(i), e > 0 && void 0 !== map)) {
      var n = map.LocateMarker(e, t, s, !0);
      void 0 !== o &&
        o &&
        map.AddTrackPoint(
          e,
          n.properties.x,
          n.properties.y,
          n.properties.s,
          n.properties.t,
          n.properties.dir,
          null,
          ANIMATION_TIME
        ),
        $("#maptools #ed_street_view").hasClass("tool_active")
          ? ($("#maptools #ed_street_view")
              .attr("x", n.properties.x)
              .attr("y", n.properties.y)
              .attr("dir", n.properties.dir),
            $("#streetview_img").html(
              "<img src=https://maps.googleapis.com/maps/api/streetview?key=" +
                JS_GOOGLE_KEY +
                "&size=150x83&sensor=false&location=" +
                n.properties.y / 1e6 +
                "," +
                n.properties.x / 1e6 +
                "&fov=90&heading=" +
                n.properties.dir +
                "&pitch=10>"
            ))
          : $("#maptools #ed_street_view")
              .removeAttr("x")
              .removeAttr("y")
              .removeAttr("dir"),
        map.MoveTop(n);
    }
  } catch (e) {}
}
function findpageitem(e, t) {
  var a = !1,
    o = $(e + " .tree_table").find(
      "tbody tr td:nth-child(3):contains('" + t + "')"
    );
  if (o.length > 0) {
    var s = o.eq(0).parent();
    $lastselect &&
      ($lastselect.removeClass("active"),
      $lastselect.next().removeClass("active")),
      s.addClass("active"),
      s.next().addClass("active"),
      ($lastselect = s);
    var i = s.parent().find("tr th:eq(2)");
    if (i.hasClass("close")) {
      i.removeClass("close").addClass("open");
      var l = i.parent().parent().parent().attr("id"),
        n = i.parent().parent().find("tr:gt(0):not(.end_state)");
      $.each(n, function (e, t) {
        var a = parseInt($(t).attr("n"));
        updateOne(GroupItem[l + "_" + a]);
      }),
        s.parent().find("tr:gt(0)").toggle();
    }
    var r = parseInt(s.attr("n"));
    (current_id = r),
      0 != s.position().top &&
        ($(e).parent().scrollTop(0), $(e).parent().scrollTop(s.position().top)),
      (a = !0);
  }
  return a;
}
function findpageitems(e) {
  var t = [],
    a = $("#mod .tab_active").attr("target");
  if ("#tab_all" == a)
    (o = $("#tab_online .tree_table").find("tbody tr[n=" + e + "]")).length >
      0 && t.push(o),
      (o = $("#tab_offline .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o),
      (o = $("#tab_expired .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o);
  else if ("#tab_online" == a) {
    (o = $("#tab_all .tree_table").find("tbody tr[n=" + e + "]")).length > 0 &&
      t.push(o),
      (o = $("#tab_offline .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o),
      (o = $("#tab_expired .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o);
  } else if ("#tab_offline" == a) {
    (o = $("#tab_all .tree_table").find("tbody tr[n=" + e + "]")).length > 0 &&
      t.push(o),
      (o = $("#tab_online .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o),
      (o = $("#tab_expired .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o);
  } else if ("#tab_expired" == a) {
    var o;
    (o = $("#tab_all .tree_table").find("tbody tr[n=" + e + "]")).length > 0 &&
      t.push(o),
      (o = $("#tab_online .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o),
      (o = $("#tab_offline .tree_table").find("tbody tr[n=" + e + "]")).length >
        0 && t.push(o);
  }
  return t;
}
function search_select() {
  releaseTrack();
  var e = $("#sch #device").val();
  if ("" != e) {
    var t = $("#object_list .tab_active").attr("target");
    findpageitem(t, e) ||
      "#tab_all" == t ||
      (pagechanged("#tab_all"), findpageitem("#tab_all", e));
  }
}
function relocate() {
  if (!nologin) {
    if ((remain--, remain < 0)) {
      remain = JS_GLOBAL_MIM_UPDATE;
      var objid = getShowObjs();
      objid.length >= 0 &&
        $.post(
          "../devstat.ajax.php?t=" + new Date().getTime(),
          { objid: objid, test:1 },
          function (data) {
            if ("" != data) {
              try {
                if ("nologin" == data)
                  timer &&
                    (clearTimeout(timer),
                    (timer = null),
                    (nologin = !0),
                    (window.location.href = "../mobile/mlogin.php"));
                else {
                  needloc = !1;
                  var result = eval("(" + data + ")");
                  refresh_list(result),
                    updateDevice(result.data, current_id, map, result.first),
                    (json = null);
                }
              } catch (e) {}
              data = null;
            }
          }
        ),
        needUpdatePlace && loadPlace(),
        needLoadCommand && loadUserCommand(),
        getLocation(!1);
    }
    var $timeout = $("#geo #timeout");
    $timeout.text(remain).attr("title", JS_LOCATE_TIP.replace("%d", remain)),
      ($timeout = null),
      (timer = null),
      (timer = setTimeout("relocate()", 1e3));
  }
}
function onfree() {
  if (
    ((JS_DEVICE_ID4FLAG = null),
    (JS_DEVICE_FLAG4ID = null),
    (JS_DEVICE_STATUS = null),
    (JS_DEVICE_TYPE4ID = null),
    void 0 !== map)
  )
    try {
      map.Free(), (map = null);
    } catch (e) {}
}
function oninit() {
  pagechanged("#tab_speedchart");
}
function onLoadGoogle() {
  1 == JS_GOOGLE_TYPE
    ? loadScript(
        "https://maps.googleapis.com/maps/api/js?key=" + JS_GOOGLE_KEY,
        onLoadGoogleMutant()
      )
    : onLoadGoogleMutant();
}
function onLoadGoogleMutant() {
  loadScript("mmap/leaflet/Leaflet.GoogleMutant.js", onLoadMap);
}
function onLoadMap() {
  var e = {
    centerLng: JS_DEFAULT_LNG,
    centerLat: JS_DEFAULT_LAT,
    zoom: JS_DEFAULT_ZOOM,
  };
  if (
    ((map = new MapOperat("map", e, !1, !0, !1)),
    (ext = new MapExtend(map.GetMap(), !1, !1)),
    loadPlace(),
    loadUserCommand(),
    0 == JS_GOOGLE_TYPE && blockMoroccoBorders)
  ) {
    for (
      var t = [],
        a = "27.667269,-13.173926;27.667269,-8.667617".split(";"),
        o = 0;
      o < a.length;
      o++
    ) {
      var s = [a[o].split(",")[0], a[o].split(",")[1]];
      t.push(s);
    }
    ext.BuildPolyline(t, !1, "#F3F1ED", 20, !1, "", 15),
      (a = "24.226929,-16.260254;25.145285,-10.128906".split(";")),
      ext.BuildRectangle(
        parseFloat(a[0].split(",")[0]),
        parseFloat(a[0].split(",")[1]),
        parseFloat(a[1].split(",")[0]),
        parseFloat(a[1].split(",")[1]),
        !1,
        "#F3F1ED",
        20,
        !1,
        "",
        8,
        1
      );
  }
  map.Zoom(JS_DEFAULT_ZOOM),
    $("#maptools #ed_asset").attr("title", JS_ENABLE_DISABLE_ASSET),
    $("#maptools #ed_fit").attr("title", JS_FIT_ASSETS),
    1 == JS_DEFAULT_SHOW &&
      $("#maptools #ed_asset").css({ opacity: 1 }).addClass("tool_active"),
    $("#maptools #ed_label").attr("title", JS_ENABLE_DISABLE_LABEL),
    $("#maptools #ed_marker").attr("title", JS_ENABLE_DISABLE_MARKER),
    1 == JS_DEFAULT_MARKER &&
      $("#maptools #ed_marker").css({ opacity: 1 }).addClass("tool_active"),
    $("#maptools #ed_zone").attr("title", JS_ENABLE_DISABLE_ZONES),
    1 == JS_DEFAULT_ZONE &&
      $("#maptools #ed_zone").css({ opacity: 1 }).addClass("tool_active"),
    $("#maptools #ed_clusters").attr("title", JS_ENABLE_DISABLE_CLUSTERS),
    $("#maptools #ed_street_view").attr("title", JS_ENABLE_DISABLE_STREETVIEW),
    $("#maptools #ed_task").attr("title", JS_DISABLE_TASK),
    $("#maptools #ed_driver").attr("title", JS_ENABLE_DISABLE_DRIVER),
    $("#maptools_ext #ed_arrow").attr("title", JS_ENABLE_DISABLE_ARROWS),
    $("#maptools_ext #ed_point").attr("title", JS_ENABLE_DISABLE_POINTS),
    $("#maptools_ext #ed_stop").attr("title", JS_ENABLE_DISABLE_STOPS),
    $("#maptools_ext #ed_event").attr("title", JS_ENABLE_DISABLE_EVENTS),
    $("#maptools_ext #ed_snap").attr("title", JS_ENABLE_DISABLE_SNAP),
    $("#maptools_ext #ed_route").attr("title", JS_ENABLE_DISABLE_ROUTE),
    $("#maptools_ext").css("display", "none"),
    $("#maptools #ed_asset")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_asset").hasClass("tool_active")
          ? ($("#maptools #ed_asset").removeClass("tool_active"),
            $("#maptools #ed_asset").css({ opacity: 0.5 }),
            showAllObj(!1),
            cancelDefShowAll())
          : ($("#maptools #ed_asset").addClass("tool_active"),
            $("#maptools #ed_asset").css({ opacity: 1 }),
            showAllObj(!0));
      }),
    $("#maptools #ed_fit")
      .parent()
      .unbind("click")
      .click(function () {
        map.MarkersFitBounds();
      }),
    $("#maptools #ed_label")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_label").hasClass("tool_active")
          ? ($("#maptools #ed_label").removeClass("tool_active"),
            $("#maptools #ed_label").css({ opacity: 0.5 }),
            map.ToggleMarkerTooltip(!1))
          : ($("#maptools #ed_label").addClass("tool_active"),
            $("#maptools #ed_label").css({ opacity: 1 }),
            map.ToggleMarkerTooltip(!0));
      }),
    $("#maptools #ed_marker")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_marker").hasClass("tool_active")
          ? ($("#maptools #ed_marker").removeClass("tool_active"),
            $("#maptools #ed_marker").css({ opacity: 0.5 }),
            ext.ClearUserMarker(usermarkers))
          : ($("#maptools #ed_marker").addClass("tool_active"),
            $("#maptools #ed_marker").css({ opacity: 1 }),
            drawUserMarker());
      }),
    $("#maptools #ed_zone")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_zone").hasClass("tool_active")
          ? ($("#maptools #ed_zone").removeClass("tool_active"),
            $("#maptools #ed_zone").css({ opacity: 0.5 }),
            ext.ClearZone(zones))
          : ($("#maptools #ed_zone").addClass("tool_active"),
            $("#maptools #ed_zone").css({ opacity: 1 }),
            drawZone());
      }),
    $("#maptools #ed_clusters")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_clusters").hasClass("tool_active")
          ? ($("#maptools #ed_clusters").removeClass("tool_active"),
            $("#maptools #ed_clusters").css({ opacity: 0.5 }),
            map.ClustersMarker(!1))
          : ($("#maptools #ed_clusters").addClass("tool_active"),
            $("#maptools #ed_clusters").css({ opacity: 1 }),
            map.ClustersMarker(!0));
      }),
    $("#maptools #ed_street_view")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_street_view").hasClass("tool_active")
          ? ($("#maptools #ed_street_view").removeClass("tool_active"),
            $("#maptools #ed_street_view").css({ opacity: 0.5 }),
            $("#streetview_img").css("display", "none"),
            $("#maptools #ed_street_view")
              .removeAttr("x")
              .removeAttr("y")
              .removeAttr("dir"))
          : ($("#maptools #ed_street_view").addClass("tool_active"),
            $("#maptools #ed_street_view").css({ opacity: 1 }),
            $("#streetview_img").css({
              display: "-webkit-box",
              "-webkit-box-align": "center",
              "-webkit-box-pack": "center",
            }),
            current_id > 0 && map_locate(current_id, !0, !1, !1, !1));
      }),
    $("#maptools #ed_driver")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_driver").hasClass("tool_active")
          ? ($("#maptools #ed_driver").removeClass("tool_active"),
            $("#maptools #ed_driver").css({ opacity: 0.5 }),
            map.ToggleDriver(!1))
          : ($("#maptools #ed_driver").addClass("tool_active"),
            $("#maptools #ed_driver").css({ opacity: 1 }),
            map.ToggleDriver(!0));
      }),
    $("#maptools #ed_task")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools #ed_task").hasClass("tool_active") && disableCurrentTask();
      }),
    $("#maptools_ext #ed_arrow")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools_ext #ed_arrow").hasClass("tool_active")
          ? ($("#maptools_ext #ed_arrow").removeClass("tool_active"),
            $("#maptools_ext #ed_arrow").css({ opacity: 0.5 }),
            map.ToggleAngleLayer(!1))
          : ($("#maptools_ext #ed_arrow").addClass("tool_active"),
            $("#maptools_ext #ed_arrow").css({ opacity: 1 }),
            map.ToggleAngleLayer(!0));
      }),
    $("#maptools_ext #ed_point")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools_ext #ed_point").hasClass("tool_active")
          ? ($("#maptools_ext #ed_point").removeClass("tool_active"),
            $("#maptools_ext #ed_point").css({ opacity: 0.5 }),
            map.ToggleTimesLayer(!1))
          : ($("#maptools_ext #ed_point").addClass("tool_active"),
            $("#maptools_ext #ed_point").css({ opacity: 1 }),
            map.ToggleTimesLayer(!0));
      }),
    $("#maptools_ext #ed_stop")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools_ext #ed_stop").hasClass("tool_active")
          ? ($("#maptools_ext #ed_stop").removeClass("tool_active"),
            $("#maptools_ext #ed_stop").css({ opacity: 0.5 }),
            map.ToggleStopLayer(!1))
          : ($("#maptools_ext #ed_stop").addClass("tool_active"),
            $("#maptools_ext #ed_stop").css({ opacity: 1 }),
            map.ToggleStopLayer(!0));
      }),
    $("#maptools_ext #ed_event")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools_ext #ed_event").hasClass("tool_active")
          ? ($("#maptools_ext #ed_event").removeClass("tool_active"),
            $("#maptools_ext #ed_event").css({ opacity: 0.5 }),
            map.ToggleEventLayer(!1))
          : ($("#maptools_ext #ed_event").addClass("tool_active"),
            $("#maptools_ext #ed_event").css({ opacity: 1 }),
            map.ToggleEventLayer(!0));
      }),
    $("#maptools_ext #ed_route")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools_ext #ed_route").hasClass("tool_active")
          ? ($("#maptools_ext #ed_route").removeClass("tool_active"),
            $("#maptools_ext #ed_route").css({ opacity: 0.5 }),
            map.ShowHideTrackLine(historyid, !1))
          : ($("#maptools_ext #ed_route").addClass("tool_active"),
            $("#maptools_ext #ed_route").css({ opacity: 1 }),
            map.ShowHideTrackLine(historyid, !0));
      }),
    $("#maptools_ext #ed_snap")
      .parent()
      .unbind("click")
      .click(function () {
        $("#maptools_ext #ed_snap").hasClass("tool_active")
          ? ($("#maptools_ext #ed_snap").removeClass("tool_active"),
            $("#maptools_ext #ed_snap").css({ opacity: 0.5 }),
            map.ToggleSnapLayer(!1))
          : ($("#maptools_ext #ed_snap").addClass("tool_active"),
            $("#maptools_ext #ed_snap").css({ opacity: 1 }),
            map.ToggleSnapLayer(!0));
      }),
    $("#mylocation")
      .unbind("click")
      .click(function () {
        $("#mylocation").hasClass("tool_active")
          ? ($("#mylocation").removeClass("tool_active"),
            $("#mylocation").css({ opacity: 0.5 }),
            hideMyLocation(),
            (isShowMyLocation = !1))
          : ($("#mylocation").addClass("tool_active"),
            $("#mylocation").css({ opacity: 1 }),
            (isShowMyLocation = !0),
            getLocation(!0));
      }),
    $("#object-back")
      .unbind("click")
      .click(function () {
        showPage("page_menu");
      }),
    $("#object-release")
      .unbind("click")
      .click(function () {
        releaseTrack();
      }),
    $("#page_history #history-back")
      .unbind("click")
      .click(function () {
        showPage("page_menu");
      }),
    $("#page_cmd #cmd-back")
      .unbind("click")
      .click(function () {
        showPage("page_menu");
      }),
    $("#dashboard-back")
      .unbind("click")
      .click(function () {
        showPage("page_menu");
      }),
    $("#event-back")
      .unbind("click")
      .click(function () {
        showPage("page_menu");
      }),
    $("#page_setting #setting-back")
      .unbind("click")
      .click(function () {
        showPage("page_menu");
      }),
    $("#cflag").bind("input propertychange", function () {
      showSendCmd($("#cflag").val());
    }),
    $("#day").change(function () {
      parseInt($(this).val()) < 0
        ? $("#starttime, #endtime").show()
        : $("#starttime, #endtime").hide();
    });
  var i = "YYYY-MM-DD HH:mm:ss";
  switch (
    (initPicker(".history_date_from", JS_HIS_TIME_START, i),
    initPicker(".history_date_to", JS_HIS_TIME_END, i),
    $("#history_date_from").click(function () {
      initPicker(".history_date_from", JS_HIS_TIME_START, i);
    }),
    $("#history_date_to").click(function () {
      initPicker(".history_date_to", JS_HIS_TIME_END, i);
    }),
    $("#queryhis").bind("click", doSearch),
    $("#hide").click(function () {
      showHistoryNavbar(!1), map.ResizeMapContainer();
    }),
    $("#setting-btn").bind("click", doUpdateSet),
    $("#object-detail-back").click(function () {
      $("#object_detail").css("display", "none"),
        $("#object_list").css("display", "block");
    }),
    $("#route").click(function () {
      $("#route i").hasClass("icon-navbar-route")
        ? ($("#route span").text(JS_MAP),
          $("#route i")
            .removeClass("icon-navbar-route")
            .addClass("icon-navbar-map"),
          $("#map").css("display", "none"),
          $("#details_panel").css("display", "block"))
        : ($("#route span").text(JS_ROUTE),
          $("#route i")
            .removeClass("icon-navbar-map")
            .addClass("icon-navbar-route"),
          $("#map").css("display", "block"),
          $("#details_panel").css("display", "none")),
        map.ResizeMapContainer();
    }),
    $("#streetview_img")
      .unbind("click")
      .click(function () {
        openStreetView(
          $("#maptools #ed_street_view").attr("x"),
          $("#maptools #ed_street_view").attr("y"),
          $("#maptools #ed_street_view").attr("dir")
        );
      }),
    JS_DEFAULT_PAGE)
  ) {
    case 0:
      showPage("page_menu");
      break;
    case 1:
      showPage("page_objects");
      break;
    case 2:
      showPage("page_map");
      break;
    case 3:
      showPage("page_dashboard");
  }
  getLocation(!1);
}
function openStreetView(e, t, a) {
  window.open(
    JS_GOOGLE_MAP_BASE_LINK +
      "/maps?q&layer=c&hl=" +
      JS_CURRENT_LANG +
      "&cbll=" +
      t / 1e6 +
      "," +
      e / 1e6 +
      "&cbp=11," +
      a +
      ",0,0,0",
    "_blank"
  );
}
function initPicker(e, t, a) {
  var o = { title: t, cancel: JS_BUTTON_CANCEL, confirm: JS_BUTTON_OK };
  new Picker(document.querySelector(e), { format: a, text: o });
}
function showView(e, t) {
  var a = $(e);
  t
    ? (a.css("visibility", "visible"),
      a.css("z-index", "1"),
      a.css("display", "block"))
    : (a.css("visibility", "hidden"),
      a.css("z-index", "-1"),
      a.css("display", "none"));
}
function showPage(e) {
  switch (e) {
    case "page_menu":
      $("#page_menu").css("display", "none"),
        showView(
          "#page_map, #page_objects, #page_dashboard, #page_history, #page_cmd, #page_events, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_menu", !0);
      break;
    case "page_map":
      $("#page_map, #maptools").css("display", "block"),
        showView(
          "#page_menu, #page_objects, #page_dashboard, #page_history, #page_cmd, #page_events, #page_setting",
          !1
        ),
        showView("#page_map, #maptools", !0),
        historymode &&
          ($("#maptools_ext").css("display", "block"),
          showView("#maptools_ext", !0)),
        map.ResizeMapContainer(),
        (page_last = e);
      break;
    case "page_objects":
      $("#page_objects").css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_dashboard, #page_history, #page_cmd, #page_events, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_objects", !0),
        (page_last = e),
        firstpagechange || (pagechanged("#tab_all"), (firstpagechange = !0));
      break;
    case "page_dashboard":
      $("#page_dashboard").css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_objects,#page_history, #page_cmd, #page_events, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_dashboard", !0),
        (page_last = e),
        showObjChart();
      break;
    case "page_history":
      $("#page_history").css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_objects, #page_dashboard, #page_cmd, #page_events, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_history", !0),
        (page_last = e);
      break;
    case "page_cmd":
      $("#page_cmd").css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_objects, #page_dashboard, #page_history, #page_events, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_cmd", !0),
        (page_last = e);
      break;
    case "page_events":
      $("#page_events").css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_objects, #page_dashboard, #page_history, #page_cmd, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_events", !0),
        (page_last = e),
        loadEventInfo();
      break;
    case "page_setting":
      $("#page_setting").css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_objects, #page_dashboard, #page_history, #page_cmd, #page_events, #maptools, #maptools_ext",
          !1
        ),
        showView("#page_setting", !0),
        (page_last = e),
        $("#idZoom").val(JS_DEFAULT_ZOOM),
        $("#show_all_object").prop("checked", 1 == JS_DEFAULT_SHOW),
        $("#show_marker").prop("checked", 1 == JS_DEFAULT_MARKER),
        $("#object_fit_bounds").prop("checked", 1 == JS_DEFAULT_FIT),
        $("#collapsed_asset_group").prop("checked", 1 == JS_DEFAULT_COLLAPSED),
        $("#show_zone").prop("checked", 1 == JS_DEFAULT_ZONE),
        $("#def_page option[value=" + JS_DEFAULT_PAGE + "]").prop(
          "selected",
          !0
        ),
        $("#idZoom")
          .find("option[value='" + JS_DEFAULT_ZOOM + "']")
          .prop("selected", !0),
        $("#pushNoti").prop("checked", 1 == JS_PUSH_NOTIFICATION),
        $("#sond_alarm").prop("checked", 1 == JS_DEFAULT_SOUND_ALARM),
        $("#popup_alarm").prop("checked", 1 == JS_DEFAULT_POPUP_ALARM),
        $("#unit_speed option[value=" + JS_UNIT_SPEED + "]").prop(
          "selected",
          !0
        ),
        $("#unit_distance option[value=" + JS_UNIT_DISTANCE + "]").prop(
          "selected",
          !0
        ),
        $("#unit_fuel option[value=" + JS_UNIT_FUEL + "]").prop("selected", !0),
        $("#unit_temp option[value=" + JS_UNIT_TEMPERATURE + "]").prop(
          "selected",
          !0
        ),
        $("#unit_altitude option[value=" + JS_UNIT_ALTITUDE + "]").prop(
          "selected",
          !0
        ),
        $("#unit_tpms option[value=" + JS_UNIT_TPMS + "]").prop("selected", !0),
        initAssetInfosUpdate();
      break;
    case "page_last":
      $("#" + page_last).css("display", "block"),
        showView(
          "#page_menu, #page_map, #page_objects, #page_dashboard, #page_history, #page_cmd, #page_events, #page_setting, #maptools, #maptools_ext",
          !1
        ),
        showView("#" + page_last, !0);
  }
}
function initAssetInfos() {
  (selectAssetInfos = new vanillaSelectBox("#asset_infos", {
    maxHeight: 300,
    minWidth: 130,
    search: !1,
    disableSelectAll: !1,
    placeHolder: JS_INFO_SELECT,
    translations: {
      all: JS_SELECT_ALL_ITEM,
      items: JS_SELECT_ITEMS,
      selectAll: JS_SELECT_ALL,
      clearAll: JS_SELECT_CLEAR_ALL,
    },
  })),
    initAssetInfosUpdate();
}
function initAssetInfosUpdate() {
  selectAssetInfos.empty(),
    selectAssetInfos.setValue(JS_DEFAULT_ASSET_INFOS.toString().split(","));
}
function haveInfo(e) {
  if (null == JS_DEFAULT_ASSET_INFOS || 0 == JS_DEFAULT_ASSET_INFOS.length)
    return !1;
  for (
    var t = JS_DEFAULT_ASSET_INFOS.toString().split(","), a = 0;
    a < t.length;
    a++
  )
    if (e.toString() == t[a]) return !0;
  return !1;
}
function showHistoryNavbar(e) {
  if (e)
    (historymode = !0),
      $("#map").css("bottom", "35px"),
      $("#history_navbar").css("display", "block"),
      $("#maptools_ext").css("display", "block"),
      $("#playspeed").css("display", "block");
  else {
    if (
      ($("#play i")
        .removeClass("icon-navbar-play")
        .addClass("icon-navbar-stop"),
      $("#map").css("bottom", "0px"),
      $("#map").css("display", "block"),
      $("#details_panel").css("display", "none"),
      $("#history_navbar").css("display", "none"),
      $("#maptools_ext").css("display", "none"),
      $("#playspeed").css("display", "none"),
      stopHistory(),
      (historymode = !1),
      map)
    )
      map.ClearTrack(historyid),
        map.RemoveMarker(historyid),
        map.AddMarker(historyid, historyMarkerLast),
        $("#tab_all .tree_table")
          .find("tbody tr[n=" + historyid + "]")
          .find("td:eq(0) input")
          .is(":checked")
          ? (map.HideShowMarker(!0, historyid),
            map.LocateMarker(historyid, !0, !0, !0))
          : map.HideShowMarker(!1, historyid),
        (historyMarkerLast = null);
    historyid = 0;
  }
  map && map.SetHistoryId(historyid), map.SetHistoryMode(e);
}
function loadUserCommand() {
  $.get("../commandinfo.ajax.php", function (data) {
    if ("" != $.trim(data)) {
      var result = eval("(" + data + ")");
      null != result &&
        void 0 !== result &&
        ((typeCmd = result.tcmd), (protocolCmd = result.pparam));
    }
    needLoadCommand = !1;
  });
}
function loadPlace() {
  $.post("../manage.ajax.php", { type: 6, full: 1 }, function (data) {
    if ("" != $.trim(data)) {
      var result = eval("(" + data + ")");
      null != result &&
        void 0 !== result &&
        (null != result.list
          ? ((needUpdatePlace = !1),
            (geoList = result.list),
            $("#maptools #ed_zone").hasClass("tool_active") &&
              (ext.ClearZone(zones), drawZone()),
            $("#maptools #ed_marker").hasClass("tool_active") &&
              (ext.ClearUserMarker(usermarkers), drawUserMarker()))
          : (ext.ClearZone(zones), ext.ClearUserMarker(usermarkers)));
    }
  });
}
function drawZone() {
  var e;
  if (null != geoList && "undefined" != geoList && 0 != geoList.length)
    for (var t = 0; t < geoList.length; t++) {
      var a = geoList[t],
        o = $.trim(a.ac),
        s = a.zoom;
      if (1 == a.at) {
        var i = a.ap.split(",");
        (e = ext.BuildCircle(
          parseFloat(i[0]),
          parseFloat(i[1]),
          parseFloat(i[2]),
          !1,
          o,
          s,
          !1,
          a.an
        )),
          (zones[a.zid] = e);
      } else if (2 == a.at) {
        var l = a.ap.split(";");
        (e = ext.BuildRectangle(
          parseFloat(l[0].split(",")[0]),
          parseFloat(l[0].split(",")[1]),
          parseFloat(l[1].split(",")[0]),
          parseFloat(l[1].split(",")[1]),
          !1,
          o,
          s,
          !1,
          a.an
        )),
          (zones[a.zid] = e);
      } else if (3 == a.at) {
        for (var n = [], r = ((l = a.ap.split(";")), 0); r < l.length; r++) {
          var p = [l[r].split(",")[0], l[r].split(",")[1]];
          n.push(p);
        }
        (e = ext.BuildPolygon(n, !1, o, s, !1, a.an)), (zones[a.zid] = e);
      } else if (5 == a.at) {
        for (n = [], l = a.ap.split(";"), r = 0; r < l.length; r++) {
          p = [l[r].split(",")[0], l[r].split(",")[1]];
          n.push(p);
        }
        (e = ext.BuildPolyline(n, !1, o, s, !1, a.an)), (zones[a.zid] = e);
      }
    }
}
function drawUserMarker() {
  var e;
  if (null != geoList && "undefined" != geoList && 0 != geoList.length)
    for (var t = 0; t < geoList.length; t++) {
      var a = geoList[t],
        o = $.trim(a.ac),
        s = a.zoom;
      if (4 == a.at) {
        var i = a.ap.split(",");
        (e = ext.BuildMarker(
          parseFloat(i[0]),
          parseFloat(i[1]),
          !1,
          o,
          s,
          !1,
          a.an
        )),
          (usermarkers[a.zid] = e);
      }
    }
}
function doUpdatePwd() {
  var e = $("#oldpwd").val(),
    t = $("#newpwd").val(),
    a = $("#reppwd").val();
  if ("" == e)
    return (
      showLoading(!1),
      $("#errorpwd").css("display", "block").text(JS_STATUS_EMPTYOLDPASS),
      void $("#oldpwd").focus()
    );
  if ("" == t)
    return (
      showLoading(!1),
      $("#errorpwd").css("display", "block").text(JS_STATUS_EMPTYNEWPASS),
      void $("#oldpwd").focus()
    );
  if (t != a)
    return (
      showLoading(!1),
      $("#errorpwd").css("display", "block").text(JS_STATUS_INVALIDREPEPASS),
      void $("#oldpwd").focus()
    );
  try {
    $.get(
      "../changpass.ajax.php",
      { idOld: e, idNew: t, idRep: a },
      function (e) {
        showLoading(!1),
          "ok" == e
            ? showMessage("succ", JS_UPDATE_SET, JS_UPDATE_SUCC, 5)
            : showMessage("stop", JS_UPDATE_SET, JS_UPDATE_FAIL, 5);
      }
    );
  } catch (e) {
    showLoading(!1), showMessage("stop", JS_UPDATE_SET, JS_UPDATE_FAIL, 5);
  }
}
function doUpdateSet() {
  $("#errorpwd").css("display", "none"), (isRequestTimeout = !1);
  var e = $("#idLng").val(),
    t = $("#idLat").val(),
    a = $("#idDate").val(),
    o = $("#idTime").val(),
    s = $("#idLang").val(),
    i = $("#idZoom").val(),
    l = $("#show_all_object").prop("checked") ? 1 : 0,
    n = $("#object_fit_bounds").prop("checked") ? 1 : 0,
    r = $("#collapsed_asset_group").prop("checked") ? 1 : 0,
    p =
      null == $("#asset_infos").val() ? "" : $("#asset_infos").val().toString(),
    d = $("#show_marker").prop("checked") ? 1 : 0,
    c = $("#show_zone").prop("checked") ? 1 : 0,
    _ = $("#def_page").find("option:selected").val(),
    m = $("#pushNoti").prop("checked") ? 1 : 0,
    u = $("#sond_alarm").prop("checked") ? 1 : 0,
    g = $("#popup_alarm").prop("checked") ? 1 : 0,
    S = $("#unit_speed").find("option:selected").val(),
    h = $("#unit_distance").find("option:selected").val(),
    T = $("#unit_fuel").find("option:selected").val(),
    v = $("#unit_temp").find("option:selected").val(),
    E = $("#unit_altitude").find("option:selected").val(),
    f = $("#unit_tpms").find("option:selected").val();
  showLoading(!0, JS_GLOBAL_TIPS),
    $("#setting-btn").removeClass("enable").addClass("disable").unbind("click");
  var b = setTimeout(function () {
    (isRequestTimeout = !0),
      $("#setting-btn")
        .removeClass("disable")
        .addClass("enable")
        .bind("click", doUpdateSet),
      showLoading(!1, !0);
  }, 2e4);
  try {
    $.get(
      "../setting.ajax.php",
      {
        idLat: t,
        idLng: e,
        idDate: a,
        idTime: o,
        idLang: s,
        idZoom: i,
        iFitBounds: n,
        iCollapsedGroup: r,
        assetInfos: p,
        idShow: l,
        idMarker: d,
        idZone: c,
        idPage: _,
        idSound: u,
        idPopup: g,
        unitSpeed: S,
        unitDist: h,
        unitFuel: T,
        unitTemp: v,
        unitAltitude: E,
        unitTpms: f,
        pushNoti: m,
      },
      function (e) {
        if ((clearTimeout(b), e.indexOf("ok") >= 0)) {
          var t = window.parent;
          (t.JS_DEFAULT_DATETIME_fmt_JS = a + " " + o),
            (t.JS_DEFAULT_SOUND_ALARM = u),
            (t.JS_DEFAULT_POPUP_ALARM = g),
            (t.JS_UNIT_SPEED = S),
            (t.JS_UNIT_DISTANCE = h),
            (t.JS_UNIT_FUEL = T),
            (t.JS_UNIT_TEMPERATURE = v),
            (t.JS_UNIT_ALTITUDE = E),
            (t.JS_UNIT_TPMS = f),
            (t.JS_DEFAULT_ZOOM = i),
            (t.JS_DEFAULT_SHOW = l),
            (t.JS_DEFAULT_MARKER = d),
            (t.JS_DEFAULT_ZONE = c),
            (t.JS_DEFAULT_PAGE = _),
            (t.JS_DEFAULT_COLLAPSED = r),
            (t.JS_DEFAULT_ASSET_INFOS = p),
            (t.JS_PUSH_NOTIFICATION = m),
            $.cookie("pull_active", m, { expires: 30 }),
            t.initUnits(),
            "" == $("#oldpwd").val() &&
            "" == $("#newpwd").val() &&
            "" == $("#reppwd").val()
              ? (showLoading(!1),
                showMessage("succ", JS_UPDATE_SET, JS_UPDATE_SUCC, 5))
              : doUpdatePwd();
        } else
          showLoading(!1),
            showMessage("stop", JS_UPDATE_SET, JS_UPDATE_FAIL, 5);
        isRequestTimeout ||
          $("#setting-btn")
            .removeClass("disable")
            .addClass("enable")
            .bind("click", doUpdateSet);
      }
    );
  } catch (e) {
    showLoading(!1),
      showMessage("stop", JS_UPDATE_SET, JS_UPDATE_FAIL, 5),
      $("#setting-btn")
        .removeClass("disable")
        .addClass("enable")
        .bind("click", doUpdateSet);
  }
}
function mapsSelector(e, t) {
  -1 != navigator.platform.indexOf("iPhone") ||
  -1 != navigator.platform.indexOf("iPad") ||
  -1 != navigator.platform.indexOf("iPod")
    ? (window.location =
        "maps://maps.google.com/maps?q=" + e + "," + t + "&amp;ll=")
    : (window.location.href =
        "geo:" + e + "," + t + "?q=" + e + "," + t + "(" + e + "," + t + ")");
}
function openWaze(e, t) {
  -1 != navigator.platform.indexOf("iPhone") ||
  -1 != navigator.platform.indexOf("iPad") ||
  -1 != navigator.platform.indexOf("iPod")
    ? (window.location =
        "https://www.waze.com/ul?ll=" + e + "," + t + "&navigate=no")
    : (window.location.href = "waze://?ll=" + e + "," + t + "&navigate=yes");
}
function showObjectStatus(e) {
  if (e > 0 && void 0 !== map) {
    var t = map.LocateMarker(e, !1, !1, !1);
    $("#object_detail_ext tbody").empty();
    var a = $("<tbody></tbody>").appendTo($("#object_detail_ext")),
      o = $("<tr></tr>").appendTo(a);
    $("<td></td>").text(JS_POSITION).appendTo(o),
      $("<td></td>")
        .html(
          "<a style='outline:none; margin: 2px 0px' onclick='mapsSelector(" +
            (t.properties.y / 1e6).toFixed(5) +
            "," +
            (t.properties.x / 1e6).toFixed(5) +
            ")'><img style='outline:none; margin: 2px 0px' src='../img/google.svg' width='30px' height='30px'></img></a>&nbsp;&nbsp;<a style='outline:none; margin: 2px 0px' onclick='openWaze(" +
            (t.properties.y / 1e6).toFixed(5) +
            "," +
            (t.properties.x / 1e6).toFixed(5) +
            ")'><img style='outline:none; margin: 2px 0px' src='../img/waze.png' width='30px' height='30px'></img></a>"
        )
        .appendTo(o);
    o = $("<tr></tr>").appendTo(a);
    $("<td></td>").text(JS_SPEED).appendTo(o),
      $("<td></td>")
        .text(t.properties.s + " " + UNIT_SPEED)
        .appendTo(o);
    o = $("<tr></tr>").appendTo(a);
    $("<td></td>").text(JS_HEADING).appendTo(o),
      $("<td></td>")
        .html(t.properties.dir + " &#176;")
        .appendTo(o);
    o = $("<tr></tr>").appendTo(a);
    $("<td></td>").text(JS_GPS_TIME).appendTo(o),
      $("<td></td>").html(t.properties.t).appendTo(o);
    o = $("<tr></tr>").appendTo(a);
    $("<td></td>").text(JS_SERVER_TIME).css("width", "35%").appendTo(o),
      $("<td></td>").html(t.properties.ts).appendTo(o);
    var s = getStatusById(e).split(";").reverse();
    if (s.length > 0)
      for (var i = 0; i < s.length; i++)
        if (s[i].length > 0)
          for (var l = s[i].split("<br>"), n = 0; n < l.length; n++) {
            o = $("<tr></tr>").appendTo(a);
            var r = l[n].split(": ");
            null !=
            (null != r[1] &&
              r[1].match(
                /^[1-9]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])\s+(20|21|22|23|[0-1]\d):[0-5]\d:[0-5]\d$/
              ))
              ? ($("<td></td>").text(r[0]).appendTo(o),
                $("<td></td>")
                  .text($.format.date(r[1], JS_DEFAULT_DATETIME_fmt_JS))
                  .appendTo(o))
              : ($("<td></td>").text(r[0]).appendTo(o),
                $("<td></td>").text(r[1]).appendTo(o));
          }
    o = $("<tr></tr>").appendTo(a);
    $("<td></td>").text(JS_TIP_ADDR).appendTo(o);
    var p = $("<td></td>").appendTo(o);
    map.GeoNames(t.properties.x, t.properties.y, p, "text", 0);
    var d = t.properties.st;
    $("#scmd_cut").prop("checked", !1);
    var c = $("#scmd_cut");
    $("#scmd_cut")
      .unbind("click")
      .click(function () {
        $("#scmd_cut").prop("checked") && sendScommand(e, 6, null, c);
      }),
      $("#scmd_uncut").prop("checked", !1);
    var _ = $("#scmd_uncut");
    $("#scmd_uncut")
      .unbind("click")
      .click(function () {
        $("#scmd_uncut").prop("checked") && sendScommand(e, 7, null, _);
      }),
      null != d &&
        -1 != d.indexOf("301D") &&
        $("#scmd_uncut").prop("checked", !0),
      $("#scmd_arm").prop("checked", !1);
    var m = $("#scmd_arm");
    $("#scmd_arm")
      .unbind("click")
      .click(function () {
        $("#scmd_arm").prop("checked") && sendScommand(e, 653, null, m);
      }),
      null != d &&
        -1 != d.indexOf("3007") &&
        $("#scmd_arm").prop("checked", !0),
      $("#scmd_disarm").prop("checked", !1);
    var u = $("#scmd_disarm");
    $("#scmd_disarm")
      .unbind("click")
      .click(function () {
        $("#scmd_disarm").prop("checked") && sendScommand(e, 665, null, u);
      }),
      null != d &&
        -1 != d.indexOf("3008") &&
        $("#scmd_disarm").prop("checked", !0),
      $("#scmd_lock").prop("checked", !1);
    var g = $("#scmd_lock");
    $("#scmd_lock")
      .unbind("click")
      .click(function () {
        $("#scmd_lock").prop("checked") && sendScommand(e, 4, null, g);
      }),
      null != d &&
        -1 != d.indexOf("3002") &&
        $("#scmd_lock").prop("checked", !0),
      $("#scmd_unlock").prop("checked", !1);
    var S = $("#scmd_unlock");
    $("#scmd_unlock")
      .unbind("click")
      .click(function () {
        $("#scmd_unlock").prop("checked") && sendScommand(e, 5, null, S);
      }),
      null != d &&
        -1 != d.indexOf("3001") &&
        $("#scmd_unlock").prop("checked", !0),
      $("#object_detail").animate({ scrollTop: 0 }, 0);
  }
}
function issupportcmd(e, t) {
  for (var a = !1, o = 0; o < typeCmd.length; o++)
    if (typeCmd[o].tid == e && (typeCmd[o], t == typeCmd[o].cid)) {
      a = !0;
      break;
    }
  return a;
}
function sendScommand(e, t, a, o) {
  var s = {
    objid: e,
    cmdid: t,
    params: null == a ? "" : a.substring(0, a.length - 1),
  };
  try {
    $.get("../command.ajax.php", s, function (e) {
      e.indexOf("ok") >= 0 || o.prop("checked", !1);
    });
  } catch (e) {
    o.prop("checked", !1);
  }
}
function getLocation(e) {
  if (isShowMyLocation) {
    myLocation.needCenter = e;
    navigator.geolocation &&
      navigator.geolocation.getCurrentPosition(onSuccess, onError, {
        enableHighAccuracy: !0,
        maximumAge: 1e3,
      });
  }
}
function onSuccess(e) {
  (myLocation.lng = e.coords.longitude.toFixed(6)),
    (myLocation.lat = e.coords.latitude.toFixed(6)),
    displayMyLocation(myLocation.needCenter);
}
function displayMyLocation(e) {
  0 != myLocation.lng &&
    0 != myLocation.lat &&
    map.DisplayMyLocation(myLocation, e);
}
function hideMyLocation() {
  map.HideMyLocation();
}
function onError(e) {
  e.code;
}
function getIpLocation() {
  $.get("../ip.location.ajax.php", function (data) {
    try {
      var json = eval("(" + data + ")");
      null != json &&
        ((myLocation.lng = json.lng),
        (myLocation.lat = json.lat),
        displayMyLocation(myLocation.needCenter));
    } catch (e) {}
  });
}
$(document).ready(function () {
  for (
    var e = new Array("iphone", "ipod", "ipad"),
      t = navigator.userAgent.toLowerCase(),
      a = 0;
    a < e.length;
    a++
  )
    if (-1 != t.indexOf(e[a])) {
      var o = [
        "page_objects",
        "page_dashboard",
        "dashboard-table-div",
        "object_list",
        "tablist",
        "object_detail",
        "page_events",
        "event-table-div",
        "settings",
        "settings-items",
        "cmdul",
        "page_cmd_details",
        "page_history_setting",
        "details_panel",
        "tab_movesdetail",
      ];
      for (a = 0; a < o.length; a++)
        document
          .getElementById(o[a])
          .addEventListener("touchstart", function (e) {
            (this.allowUp = this.scrollTop > 0),
              (this.allowDown =
                this.scrollTop < this.scrollHeight - this.clientHeight),
              (this.prevTop = null),
              (this.prevBot = null),
              (this.lastY = e.pageY);
          }),
          document
            .getElementById(o[a])
            .addEventListener("touchmove", function (e) {
              var t = e.pageY > this.lastY,
                a = !t;
              (this.lastY = e.pageY),
                (t && this.allowUp) || (a && this.allowDown)
                  ? e.stopPropagation()
                  : e.preventDefault();
            });
      break;
    }
  $("#tab_online").toggle(),
    $("#tab_offline").toggle(),
    $("#tab_expired").toggle(),
    $("#loadmapwait").css("display", "block"),
    (remain = JS_GLOBAL_MIM_UPDATE),
    (needShowAllAsset = JS_DEFAULT_SHOW),
    initUnits(),
    onLoadGoogle(),
    getDeviceListData(0),
    Highcharts.setOptions({
      lang: {
        contextButtonTitle: JS_CONTEXTBUTTONTITLE,
        decimalPoint: JS_DECIMALPOINT,
        downloadJPEG: JS_DOWNLOADJPEG,
        downloadPDF: JS_DOWNLOADPDF,
        downloadPNG: JS_DOWNLOADPNG,
        downloadSVG: JS_DOWNLOADSVG,
        loading: JS_LOADING,
        months: [
          JS_MONTHS1,
          JS_MONTHS2,
          JS_MONTHS3,
          JS_MONTHS4,
          JS_MONTHS5,
          JS_MONTHS6,
          JS_MONTHS7,
          JS_MONTHS8,
          JS_MONTHS9,
          JS_MONTHS10,
          JS_MONTHS11,
          JS_MONTHS12,
        ],
        noData: JS_NODATA,
        printChart: JS_PRINTCHART,
        resetZoom: JS_RESETZOOM,
        resetZoomTitle: JS_RESETZOOMTITLE,
        shortMonths: [
          JS_SHORTMONTHS1,
          JS_SHORTMONTHS2,
          JS_SHORTMONTHS3,
          JS_SHORTMONTHS4,
          JS_SHORTMONTHS5,
          JS_SHORTMONTHS6,
          JS_SHORTMONTHS7,
          JS_SHORTMONTHS8,
          JS_SHORTMONTHS9,
          JS_SHORTMONTHS10,
          JS_SHORTMONTHS11,
          JS_SHORTMONTHS12,
        ],
        thousandsSep: JS_THOUSANDSSEP,
        weekdays: [
          JS_WEEKDAYS1,
          JS_WEEKDAYS2,
          JS_WEEKDAYS3,
          JS_WEEKDAYS4,
          JS_WEEKDAYS5,
          JS_WEEKDAYS6,
          JS_WEEKDAYS7,
        ],
      },
      tooltip: {
        dateTimeLabelFormats: { year: "%Y", second: "%Y-%m-%d %H:%M:%S" },
      },
      xAxis: {
        dateTimeLabelFormats: { year: "%Y", month: "%Y-%m", dat: "%Y-%m-%d" },
      },
    }),
    initAssetInfos(),
    $("#shareexpired").datetimepicker({
      dateFormat: "yy-mm-dd",
      timeFormat: "HH:mm:ss",
      changeMonth: !0,
      changeYear: !0,
      yearRange: "-20:+20",
    }),
    $("#shareexpired")
      .unbind("click")
      .click(function () {
        $("#shareexpired").focus();
      }),
    $.cookie("pull_active", JS_PUSH_NOTIFICATION, { expires: 30 }),
    $.cookie("pull_interval", JS_PUSH_INTERVAL, { expires: 30 });
  var s = navigator.userAgent;
  s.indexOf("Android") > -1 ||
    s.indexOf("Adr") > -1 ||
    $("#push_setting").css("display", "none");
});
